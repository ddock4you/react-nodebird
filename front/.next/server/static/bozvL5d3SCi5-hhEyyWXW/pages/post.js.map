{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./pages/post.js","webpack:///external \"immer\"","webpack:///external \"react\"","webpack:///external \"react-redux\"","webpack:///./reducers/post.js","webpack:///external \"react-helmet\""],"names":["Post","id","singlePost","useSelector","state","post","User","nickname","content","name","property","Images","src","getInitialProps","context","store","dispatch","type","LOAD_POST_REQUEST","data","query","parseInt","initialState","mainPosts","imagePaths","addPostErrorReason","isAddingPost","postAdded","isAddingComment","addCommentErrorReason","commentAdded","LOAD_MAIN_POSTS_REQUEST","LOAD_MAIN_POSTS_SUCCESS","LOAD_MAIN_POSTS_FAILURE","LOAD_HASHTAG_POSTS_REQUEST","LOAD_HASHTAG_POSTS_SUCCESS","LOAD_HASHTAG_POSTS_FAILURE","LOAD_USER_POSTS_REQUEST","LOAD_USER_POSTS_SUCCESS","LOAD_USER_POSTS_FAILURE","UPLOAD_IMAGES_REQUEST","UPLOAD_IMAGES_SUCCESS","UPLOAD_IMAGES_FAILURE","REMOVE_IMAGE","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","LIKE_POST_REQUEST","LIKE_POST_SUCCESS","LIKE_POST_FAILURE","UNLIKE_POST_REQUEST","UNLIKE_POST_SUCCESS","UNLIKE_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","LOAD_COMMENTS_REQUEST","LOAD_COMMENTS_SUCCESS","LOAD_COMMENTS_FAILURE","RETWEET_REQUEST","RETWEET_SUCCESS","RETWEET_FAILURE","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","REMOVE_POST_FAILURE","LOAD_POST_SUCCESS","LOAD_POST_FAILURE","action","produce","draft","forEach","p","push","index","findIndex","v","i","splice","Added","unshift","error","postIndex","postId","Comments","comment","comments","lastId","hasMorePost","d","length","Likers","userId","likeIndex"],"mappings":"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","file":"static\\bozvL5d3SCi5-hhEyyWXW\\pages\\post.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = require('../../../ssr-module-cache.js');\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tvar threw = true;\n \t\ttry {\n \t\t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n \t\t\tthrew = false;\n \t\t} finally {\n \t\t\tif(threw) delete installedModules[moduleId];\n \t\t}\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 6);\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport Helmet from \"react-helmet\";\r\nimport { LOAD_POST_REQUEST } from \"../reducers/post\";\r\n\r\nconst Post = ({ id }) => {\r\n    const { singlePost } = useSelector(state => state.post);\r\n    return (\r\n        <>\r\n            <Helmet\r\n                title={`${singlePost.User.nickname}님의 글`}\r\n                description={singlePost.content}\r\n                meta={[\r\n                    {\r\n                        name: \"description\",\r\n                        content: singlePost.content\r\n                    },\r\n                    {\r\n                        property: \"og:title\",\r\n                        content: `${singlePost.User.nickname}님의 게시글`\r\n                    },\r\n                    {\r\n                        property: \"og:description\",\r\n                        content: singlePost.content\r\n                    },\r\n                    {\r\n                        property: \"og:image\",\r\n                        content:\r\n                            singlePost.Images[0] &&\r\n                            `http://localhost:3065/${singlePost.Images[0].src}`\r\n                    },\r\n                    {\r\n                        property: \"og:url\",\r\n                        content: `http://localhost:3060/post/${id}`\r\n                    }\r\n                ]}\r\n            />\r\n            <div>{singlePost.content}</div>\r\n            <div>{singlePost.User.nickname}</div>\r\n            <div>\r\n                {singlePost.Images[0] && (\r\n                    <img\r\n                        src={`http://localhost:3060/${singlePost.Images[0].src}`}\r\n                    />\r\n                )}\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nPost.getInitialProps = async context => {\r\n    context.store.dispatch({\r\n        type: LOAD_POST_REQUEST,\r\n        data: context.query.id\r\n    });\r\n    return { id: parseInt(context.query.id, 10) };\r\n};\r\n\r\nPost.propTypes = {\r\n    id: PropTypes.number.isRequired\r\n};\r\n\r\nexport default Post;\r\n","module.exports = require(\"immer\");","module.exports = require(\"react\");","module.exports = require(\"react-redux\");","import produce from \"immer\";\r\n\r\nexport const initialState = {\r\n    mainPosts: [], // 화면에 보일 포스트들\r\n    imagePaths: [], // 미리보기 이미지 경로\r\n    addPostErrorReason: false, // 포스트 업로드 실패 사유\r\n    isAddingPost: false, // 포스트 업로드 중\r\n    postAdded: false, // 포스트 업로드 성공\r\n    isAddingComment: false,\r\n    addCommentErrorReason: \"\",\r\n    commentAdded: false,\r\n    singlePost: null\r\n};\r\n\r\nexport const LOAD_MAIN_POSTS_REQUEST = \"LOAD_MAIN_POSTS_REQUEST\";\r\nexport const LOAD_MAIN_POSTS_SUCCESS = \"LOAD_MAIN_POSTS_SUCCESS\";\r\nexport const LOAD_MAIN_POSTS_FAILURE = \"LOAD_MAIN_POSTS_FAILURE\";\r\n\r\nexport const LOAD_HASHTAG_POSTS_REQUEST = \"LOAD_HASHTAG_POSTS_REQUEST\";\r\nexport const LOAD_HASHTAG_POSTS_SUCCESS = \"LOAD_HASHTAG_POSTS_SUCCESS\";\r\nexport const LOAD_HASHTAG_POSTS_FAILURE = \"LOAD_HASHTAG_POSTS_FAILURE\";\r\n\r\nexport const LOAD_USER_POSTS_REQUEST = \"LOAD_USER_POSTS_REQUEST\";\r\nexport const LOAD_USER_POSTS_SUCCESS = \"LOAD_USER_POSTS_SUCCESS\";\r\nexport const LOAD_USER_POSTS_FAILURE = \"LOAD_USER_POSTS_FAILURE\";\r\n\r\nexport const UPLOAD_IMAGES_REQUEST = \"UPLOAD_IMAGES_REQUEST\";\r\nexport const UPLOAD_IMAGES_SUCCESS = \"UPLOAD_IMAGES_SUCCESS\";\r\nexport const UPLOAD_IMAGES_FAILURE = \"UPLOAD_IMAGES_FAILURE\";\r\n\r\nexport const REMOVE_IMAGE = \"REMOVE_IMAGE\";\r\n\r\nexport const ADD_POST_REQUEST = \"ADD_POST_REQUEST\";\r\nexport const ADD_POST_SUCCESS = \"ADD_POST_SUCCESS\";\r\nexport const ADD_POST_FAILURE = \"ADD_POST_FAILURE\";\r\n\r\nexport const LIKE_POST_REQUEST = \"LIKE_POST_REQUEST\";\r\nexport const LIKE_POST_SUCCESS = \"LIKE_POST_SUCCESS\";\r\nexport const LIKE_POST_FAILURE = \"LIKE_POST_FAILURE\";\r\n\r\nexport const UNLIKE_POST_REQUEST = \"UNLIKE_POST_REQUEST\";\r\nexport const UNLIKE_POST_SUCCESS = \"UNLIKE_POST_SUCCESS\";\r\nexport const UNLIKE_POST_FAILURE = \"UNLIKE_POST_FAILURE\";\r\n\r\nexport const ADD_COMMENT_REQUEST = \"ADD_COMMENT_REQUEST\";\r\nexport const ADD_COMMENT_SUCCESS = \"ADD_COMMENT_SUCCESS\";\r\nexport const ADD_COMMENT_FAILURE = \"ADD_COMMENT_FAILURE\";\r\n\r\nexport const LOAD_COMMENTS_REQUEST = \"LOAD_COMMENTS_REQUEST\";\r\nexport const LOAD_COMMENTS_SUCCESS = \"LOAD_COMMENTS_SUCCESS\";\r\nexport const LOAD_COMMENTS_FAILURE = \"LOAD_COMMENTS_FAILURE\";\r\n\r\nexport const RETWEET_REQUEST = \"RETWEET_REQUEST\";\r\nexport const RETWEET_SUCCESS = \"RETWEET_SUCCESS\";\r\nexport const RETWEET_FAILURE = \"RETWEET_FAILURE\";\r\n\r\nexport const REMOVE_POST_REQUEST = \"REMOVE_POST_REQUEST\";\r\nexport const REMOVE_POST_SUCCESS = \"REMOVE_POST_SUCCESS\";\r\nexport const REMOVE_POST_FAILURE = \"REMOVE_POST_FAILURE\";\r\n\r\nexport const LOAD_POST_REQUEST = \"LOAD_POST_REQUEST\";\r\nexport const LOAD_POST_SUCCESS = \"LOAD_POST_SUCCESS\";\r\nexport const LOAD_POST_FAILURE = \"LOAD_POST_FAILURE\";\r\n\r\nexport default (state = initialState, action) => {\r\n    return produce(state, draft => {\r\n        switch (action.type) {\r\n            case UPLOAD_IMAGES_REQUEST: {\r\n                break;\r\n                // return {\r\n                //     ...state\r\n                // };\r\n            }\r\n            case UPLOAD_IMAGES_SUCCESS: {\r\n                action.data.forEach(p => {\r\n                    draft.imagePaths.push(p);\r\n                });\r\n                // draft 또다른 표현 방법\r\n                // draft.imagePaths = draft.imagePaths.concat(action.data);\r\n                break;\r\n                // return {\r\n                //     ...state,\r\n                //     imagePaths: [...state.imagePaths, ...action.data]\r\n                // };\r\n            }\r\n            case UPLOAD_IMAGES_FAILURE: {\r\n                break;\r\n                // return {\r\n                //     ...state\r\n                // };\r\n            }\r\n            case REMOVE_IMAGE: {\r\n                const index = draft.imagePaths.findIndex(\r\n                    (v, i) => action.index\r\n                );\r\n                draft.imagePaths = splice(index, 1);\r\n                break;\r\n                // return {\r\n                //     ...state,\r\n                //     imagePaths: state.imagePaths.filter(\r\n                //         (v, i) => i !== action.index\r\n                //     )\r\n                // };\r\n            }\r\n            case ADD_POST_REQUEST: {\r\n                (draft.isAddingPost = true),\r\n                    (draft.addPostErrorReason = \"\"),\r\n                    (draft.Added = false);\r\n                break;\r\n                // return {\r\n                //     ...state,\r\n                //     isAddingPost: true,\r\n                //     addPostErrorReason: \"\",\r\n                //     postAdded: false\r\n                // };\r\n            }\r\n            case ADD_POST_SUCCESS: {\r\n                draft.isAddingPost = false;\r\n                draft.mainPosts.unshift(action.data);\r\n                draft.postAdded = true;\r\n                draft.imagePaths = [];\r\n                break;\r\n                // return {\r\n                //     ...state,\r\n                //     isAddingPost: false,\r\n                //     mainPosts: [action.data, ...state.mainPosts],\r\n                //     postAdded: true,\r\n                //     imagePaths: []\r\n                // };\r\n            }\r\n            case ADD_POST_FAILURE: {\r\n                draft.isAddingPost = false;\r\n                draft.addPostErrorReason = action.error;\r\n                break;\r\n                // return {\r\n                //     ...state,\r\n                //     isAddingPost: false,\r\n                //     addPostErrorReason: action.error\r\n                // };\r\n            }\r\n            case ADD_COMMENT_REQUEST: {\r\n                draft.isAddingComment = true;\r\n                draft.addCommentErrorReason = \"\";\r\n                draft.commentAdded = false;\r\n                break;\r\n                // return {\r\n                //     ...state,\r\n                //     isAddingComment: true,\r\n                //     addCommentErrorReason: \"\",\r\n                //     commentAdded: false\r\n                // };\r\n            }\r\n            case ADD_COMMENT_SUCCESS: {\r\n                const postIndex = draft.mainPosts.findIndex(\r\n                    v => v.id === action.data.postId\r\n                );\r\n                draft.mainPosts[postIndex].Comments.push(action.data.comment);\r\n                draft.isAddingComment = false;\r\n                draft.commentAdded = true;\r\n                break;\r\n                // const postIndex = state.mainPosts.findIndex(\r\n                //     v => v.id === action.data.postId\r\n                // );\r\n                // const post = state.mainPosts[postIndex];\r\n                // const Comments = [...post.Comments, action.data.comment];\r\n                // const mainPosts = [...state.mainPosts];\r\n                // mainPosts[postIndex] = { ...post, Comments };\r\n                // return {\r\n                //     ...state,\r\n                //     isAddingComment: false,\r\n                //     mainPosts,\r\n                //     commentAdded: true\r\n                // };\r\n            }\r\n            case ADD_COMMENT_FAILURE: {\r\n                draft.isAddingComment = false;\r\n                draft.addCommentErrorReason = action.error;\r\n                // return {\r\n                //     ...state,\r\n                //     isAddingComment: false,\r\n                //     addCommentErrorReason: action.error\r\n                // };\r\n            }\r\n            case LOAD_COMMENTS_SUCCESS: {\r\n                const postIndex = draft.mainPosts.findIndex(\r\n                    v => v.id === action.data.postId\r\n                );\r\n                draft.mainPosts[postIndex].Comments = action.data.comments;\r\n                break;\r\n\r\n                // const postIndex = state.mainPosts.findIndex(\r\n                //     v => v.id === action.data.postId\r\n                // );\r\n                // const post = state.mainPosts[postIndex];\r\n                // const Comments = action.data.comments;\r\n                // const mainPosts = [...state.mainPosts];\r\n                // mainPosts[postIndex] = { ...post, Comments };\r\n                // return {\r\n                //     ...state,\r\n                //     mainPosts\r\n                // };\r\n            }\r\n            // a\r\n            case LOAD_MAIN_POSTS_REQUEST:\r\n            case LOAD_HASHTAG_POSTS_REQUEST:\r\n            case LOAD_USER_POSTS_REQUEST: {\r\n                draft.mainPosts = !action.lastId ? [] : state.mainPosts;\r\n                draft.hasMorePost = action.lastId ? state.hasMorePost : true;\r\n                break;\r\n                // return {\r\n                //     ...state,\r\n                //     // 페이지 처음 들어왔을 땐 초기화하고 기존 게시글 보고 있는\r\n                //     // 상태에서 스크롤 내릴 땐 기존 게시글들 유지\r\n                //     mainPosts: action.lastId === 0 ? [] : state.mainPosts,\r\n                //     hasMorePost: action.lastId ? state.hasMorePost : true\r\n                // };\r\n            }\r\n            case LOAD_MAIN_POSTS_SUCCESS:\r\n            case LOAD_HASHTAG_POSTS_SUCCESS:\r\n            case LOAD_USER_POSTS_SUCCESS: {\r\n                action.data.forEach(d => {\r\n                    draft.mainPosts.push(d);\r\n                });\r\n                draft.hasMorePost = action.data.length === 10;\r\n                break;\r\n                // return {\r\n                //     ...state,\r\n                //     mainPosts: state.mainPosts.concat(action.data),\r\n                //     hasMorePost: action.data.length === 10 // 스크롤을 더 활성화할지 말지 결정\r\n                // };\r\n            }\r\n            case LOAD_MAIN_POSTS_FAILURE:\r\n            case LOAD_HASHTAG_POSTS_FAILURE:\r\n            case LOAD_USER_POSTS_FAILURE: {\r\n                break;\r\n            }\r\n            case LIKE_POST_REQUEST: {\r\n                break;\r\n            }\r\n            case LIKE_POST_SUCCESS: {\r\n                const postIndex = draft.mainPosts.findIndex(\r\n                    v => v.id === action.data.postId\r\n                );\r\n                draft.mainPosts[postIndex].Likers.unshift({\r\n                    id: action.data.userId\r\n                });\r\n                break;\r\n                // const postIndex = state.mainPosts.findIndex(\r\n                //     v => v.id === action.data.postId\r\n                // );\r\n                // const post = state.mainPosts[postIndex];\r\n                // const Likers = [{ id: action.data.userId }, ...post.Likers];\r\n                // const mainPosts = [...state.mainPosts];\r\n                // mainPosts[postIndex] = { ...post, Likers };\r\n                // return {\r\n                //     ...state,\r\n                //     mainPosts\r\n                // };\r\n            }\r\n            case LIKE_POST_FAILURE: {\r\n                break;\r\n                // return {\r\n                //     ...state\r\n                // };\r\n            }\r\n            case UNLIKE_POST_REQUEST: {\r\n                break;\r\n                // return {\r\n                //     ...state\r\n                // };\r\n            }\r\n            case UNLIKE_POST_SUCCESS: {\r\n                const postIndex = draft.mainPosts.findIndex(\r\n                    v => v.id === action.data.postId\r\n                );\r\n                const likeIndex = draft.mainPosts[postIndex].Likers.findIndex(\r\n                    v => v.id === action.data.userId\r\n                );\r\n                draft.mainPosts[postIndex].Likers.splice(likeIndex, 1);\r\n\r\n                // const postIndex = state.mainPosts.findIndex(\r\n                //     v => v.id === action.data.postId\r\n                // );\r\n                // const post = state.mainPosts[postIndex];\r\n                // const Likers = post.Likers.filter(\r\n                //     v => v.id !== action.data.userId\r\n                // );\r\n                // const mainPosts = [...state.mainPosts];\r\n                // mainPosts[postIndex] = { ...post, Likers };\r\n                // return {\r\n                //     ...state,\r\n                //     mainPosts\r\n                // };\r\n            }\r\n            case UNLIKE_POST_FAILURE: {\r\n                break;\r\n                // return {\r\n                //     ...state\r\n                // };\r\n            }\r\n            case RETWEET_REQUEST: {\r\n                break;\r\n                // return {\r\n                //     ...state\r\n                // };\r\n            }\r\n            case RETWEET_SUCCESS: {\r\n                draft.mainPosts = draft.mainPosts.unshift(action.data);\r\n                break;\r\n                // return {\r\n                //     ...state,\r\n                //     mainPosts: [action.data, ...state.mainPosts]\r\n                // };\r\n            }\r\n            case RETWEET_FAILURE: {\r\n                break;\r\n                // return {\r\n                //     ...state\r\n                // };\r\n            }\r\n            case REMOVE_POST_REQUEST: {\r\n                // return {\r\n                //     ...state\r\n                // };\r\n            }\r\n            case REMOVE_POST_SUCCESS: {\r\n                const index = draft.mainPosts.findIndex(\r\n                    v => v.id === action.data\r\n                );\r\n                draft.mainPosts.splice(index, 1);\r\n                // return {\r\n                //     ...state,\r\n                //     mainPosts: state.mainPosts.filter(v => v.id !== action.data)\r\n                // };\r\n            }\r\n            case REMOVE_POST_FAILURE: {\r\n                break;\r\n                // return {\r\n                //     ...state\r\n                // };\r\n            }\r\n            case LOAD_POST_SUCCESS: {\r\n                draft.singlePost = action.data;\r\n                break;\r\n            }\r\n            default: {\r\n                break;\r\n                // return {\r\n                //     ...state\r\n                // };\r\n            }\r\n        }\r\n    });\r\n};\r\n\r\n// export default reducer;\r\n","module.exports = require(\"react-helmet\");"],"sourceRoot":""}