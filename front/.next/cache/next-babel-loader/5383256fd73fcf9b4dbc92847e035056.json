{"ast":null,"code":"var __jsx = React.createElement;\nimport { Button, Card, Icon, List } from \"antd\";\nimport React, { memo } from \"react\";\nvar FollowList = memo(function (_ref) {\n  var header = _ref.header,\n      hasMore = _ref.hasMore,\n      onClickMore = _ref.onClickMore,\n      data = _ref.data,\n      onClickStop = _ref.onClickStop;\n  return __jsx(List, {\n    style: {\n      marginBottom: \"20px\"\n    },\n    grid: {\n      gutter: 4,\n      xs: 2,\n      md: 3\n    },\n    size: \"small\",\n    header: __jsx(\"div\", null, header),\n    loadMore: hasMore && __jsx(Button, {\n      style: {\n        width: \"100%\"\n      },\n      onClick: onClickMore\n    }, \"\\uB354\\uBCF4\\uAE30\"),\n    bordered: true,\n    dataSource: data,\n    renderItem: function renderItem(item) {\n      return __jsx(List.Item, {\n        style: {\n          marginTop: \"20px\"\n        }\n      }, __jsx(Card, {\n        actions: [__jsx(Icon, {\n          key: \"stop\",\n          type: \"stop\",\n          onClick: onClickStop(item.id)\n        })]\n      }, __jsx(Card.Meta, {\n        description: item.nickname\n      })));\n    }\n  });\n});\nexport default FollowList;","map":{"version":3,"sources":["D:/project/react-nodebird/front/containers/FollowList.js"],"names":["Button","Card","Icon","List","React","memo","FollowList","header","hasMore","onClickMore","data","onClickStop","marginBottom","gutter","xs","md","width","item","marginTop","id","nickname"],"mappings":";AAAA,SAASA,MAAT,EAAiBC,IAAjB,EAAuBC,IAAvB,EAA6BC,IAA7B,QAAyC,MAAzC;AACA,OAAOC,KAAP,IAAgBC,IAAhB,QAA4B,OAA5B;AAGA,IAAMC,UAAU,GAAGD,IAAI,CACnB,gBAAyD;AAAA,MAAtDE,MAAsD,QAAtDA,MAAsD;AAAA,MAA9CC,OAA8C,QAA9CA,OAA8C;AAAA,MAArCC,WAAqC,QAArCA,WAAqC;AAAA,MAAxBC,IAAwB,QAAxBA,IAAwB;AAAA,MAAlBC,WAAkB,QAAlBA,WAAkB;AACrD,SACI,MAAC,IAAD;AACI,IAAA,KAAK,EAAE;AAAEC,MAAAA,YAAY,EAAE;AAAhB,KADX;AAEI,IAAA,IAAI,EAAE;AAAEC,MAAAA,MAAM,EAAE,CAAV;AAAaC,MAAAA,EAAE,EAAE,CAAjB;AAAoBC,MAAAA,EAAE,EAAE;AAAxB,KAFV;AAGI,IAAA,IAAI,EAAC,OAHT;AAII,IAAA,MAAM,EAAE,mBAAMR,MAAN,CAJZ;AAKI,IAAA,QAAQ,EACJC,OAAO,IACH,MAAC,MAAD;AAAQ,MAAA,KAAK,EAAE;AAAEQ,QAAAA,KAAK,EAAE;AAAT,OAAf;AAAkC,MAAA,OAAO,EAAEP;AAA3C,4BAPZ;AAYI,IAAA,QAAQ,MAZZ;AAaI,IAAA,UAAU,EAAEC,IAbhB;AAcI,IAAA,UAAU,EAAE,oBAAAO,IAAI;AAAA,aACZ,MAAC,IAAD,CAAM,IAAN;AAAW,QAAA,KAAK,EAAE;AAAEC,UAAAA,SAAS,EAAE;AAAb;AAAlB,SACI,MAAC,IAAD;AACI,QAAA,OAAO,EAAE,CACL,MAAC,IAAD;AACI,UAAA,GAAG,EAAC,MADR;AAEI,UAAA,IAAI,EAAC,MAFT;AAGI,UAAA,OAAO,EAAEP,WAAW,CAACM,IAAI,CAACE,EAAN;AAHxB,UADK;AADb,SASI,MAAC,IAAD,CAAM,IAAN;AAAW,QAAA,WAAW,EAAEF,IAAI,CAACG;AAA7B,QATJ,CADJ,CADY;AAAA;AAdpB,IADJ;AAgCH,CAlCkB,CAAvB;AA6CA,eAAed,UAAf","sourcesContent":["import { Button, Card, Icon, List } from \"antd\";\r\nimport React, { memo } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst FollowList = memo(\r\n    ({ header, hasMore, onClickMore, data, onClickStop }) => {\r\n        return (\r\n            <List\r\n                style={{ marginBottom: \"20px\" }}\r\n                grid={{ gutter: 4, xs: 2, md: 3 }}\r\n                size=\"small\"\r\n                header={<div>{header}</div>}\r\n                loadMore={\r\n                    hasMore && (\r\n                        <Button style={{ width: \"100%\" }} onClick={onClickMore}>\r\n                            더보기\r\n                        </Button>\r\n                    )\r\n                }\r\n                bordered\r\n                dataSource={data}\r\n                renderItem={item => (\r\n                    <List.Item style={{ marginTop: \"20px\" }}>\r\n                        <Card\r\n                            actions={[\r\n                                <Icon\r\n                                    key=\"stop\"\r\n                                    type=\"stop\"\r\n                                    onClick={onClickStop(item.id)}\r\n                                />\r\n                            ]}\r\n                        >\r\n                            <Card.Meta description={item.nickname} />\r\n                        </Card>\r\n                    </List.Item>\r\n                )}\r\n            />\r\n        );\r\n    }\r\n);\r\n\r\nFollowList.propTypes = {\r\n    header: PropTypes.string.isRequired,\r\n    hasMore: PropTypes.bool.isRequired,\r\n    onClickMore: PropTypes.func.isRequired,\r\n    data: PropTypes.array.isRequired,\r\n    onClickStop: PropTypes.func.isRequired\r\n};\r\n\r\nexport default FollowList;\r\n"]},"metadata":{},"sourceType":"module"}