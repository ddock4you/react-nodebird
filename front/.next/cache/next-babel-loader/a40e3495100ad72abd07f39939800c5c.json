{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useEffect, useCallback } from \"react\";\nimport { Form, Button, List, Card, Input, Icon } from \"antd\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport NicknameEditForm from \"../containers/NicknameEditForm\";\nimport { LOAD_FOLLOWERS_REQUEST, LOAD_FOLLOWINGS_REQUEST, UNFOLLOW_USER_REQUEST, REMOVE_FOLLOWER_REQUEST } from \"../reducers/user\";\nimport { LOAD_USER_POSTS_REQUEST } from \"../reducers/post\";\nimport PostCard from \"../containers/PostCard\";\nimport FollowList from \"../containers/FollowList\";\n\nconst Profile = () => {\n  const dispatch = useDispatch();\n  const {\n    followerList,\n    followingList,\n    hasMoreFollowing,\n    hasMoreFollower\n  } = useSelector(state => state.user);\n  const {\n    mainPosts\n  } = useSelector(state => state.post);\n  const onUnfollow = useCallback(userId => () => {\n    dispatch({\n      type: UNFOLLOW_USER_REQUEST,\n      data: userId\n    });\n  }, []);\n  const onRemoveFollower = useCallback(userId => () => {\n    dispatch({\n      type: REMOVE_FOLLOWER_REQUEST,\n      data: userId\n    });\n  }, []);\n  const loadMoreFollowings = useCallback(() => {\n    dispatch({\n      type: LOAD_FOLLOWINGS_REQUEST,\n      offset: followingList.length\n    });\n  }, [followingList.length]);\n  const loadMoreFollowers = useCallback(() => {\n    dispatch({\n      type: LOAD_FOLLOWERS_REQUEST,\n      offset: followerList.length\n    });\n  }, [followerList.length]);\n  return __jsx(\"div\", null, __jsx(NicknameEditForm, null), __jsx(FollowList, {\n    header: __jsx(\"div\", null, \"\\uD314\\uB85C\\uC789 \\uBAA9\\uB85D\"),\n    hasMore: hasMoreFollowing,\n    onClickmore: loadMoreFollowings,\n    data: followingList,\n    onClickStop: onUnfollow\n  }), __jsx(FollowList, {\n    header: __jsx(\"div\", null, \"\\uD314\\uB85C\\uC6CC \\uBAA9\\uB85D\"),\n    hasMore: hasMoreFollower,\n    onClickmore: loadMoreFollowers,\n    data: followerList,\n    onClickStop: onRemoveFollower\n  }), __jsx(\"div\", null, mainPosts.map(c => __jsx(PostCard, {\n    key: +c.id,\n    post: c\n  }))));\n};\n\nProfile.getInitialProps = async context => {\n  const state = context.store.getState();\n  context.store.dispatch({\n    type: LOAD_FOLLOWERS_REQUEST,\n    data: state.user.me && state.user.me.id\n  });\n  context.store.dispatch({\n    type: LOAD_FOLLOWINGS_REQUEST,\n    data: state.user.me && state.user.me.id\n  });\n  context.store.dispatch({\n    type: LOAD_USER_POSTS_REQUEST,\n    data: state.user.me && state.user.me.id\n  });\n};\n\nexport default Profile;","map":{"version":3,"sources":["D:/project/react-nodebird/front/pages/profile.js"],"names":["React","useEffect","useCallback","Form","Button","List","Card","Input","Icon","useDispatch","useSelector","NicknameEditForm","LOAD_FOLLOWERS_REQUEST","LOAD_FOLLOWINGS_REQUEST","UNFOLLOW_USER_REQUEST","REMOVE_FOLLOWER_REQUEST","LOAD_USER_POSTS_REQUEST","PostCard","FollowList","Profile","dispatch","followerList","followingList","hasMoreFollowing","hasMoreFollower","state","user","mainPosts","post","onUnfollow","userId","type","data","onRemoveFollower","loadMoreFollowings","offset","length","loadMoreFollowers","map","c","id","getInitialProps","context","store","getState","me"],"mappings":"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","sourcesContent":["import React, { useEffect, useCallback } from \"react\";\r\nimport { Form, Button, List, Card, Input, Icon } from \"antd\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport NicknameEditForm from \"../containers/NicknameEditForm\";\r\nimport {\r\n    LOAD_FOLLOWERS_REQUEST,\r\n    LOAD_FOLLOWINGS_REQUEST,\r\n    UNFOLLOW_USER_REQUEST,\r\n    REMOVE_FOLLOWER_REQUEST\r\n} from \"../reducers/user\";\r\nimport { LOAD_USER_POSTS_REQUEST } from \"../reducers/post\";\r\nimport PostCard from \"../containers/PostCard\";\r\nimport FollowList from \"../containers/FollowList\";\r\n\r\nconst Profile = () => {\r\n    const dispatch = useDispatch();\r\n    const {\r\n        followerList,\r\n        followingList,\r\n        hasMoreFollowing,\r\n        hasMoreFollower\r\n    } = useSelector(state => state.user);\r\n    const { mainPosts } = useSelector(state => state.post);\r\n\r\n    const onUnfollow = useCallback(\r\n        userId => () => {\r\n            dispatch({\r\n                type: UNFOLLOW_USER_REQUEST,\r\n                data: userId\r\n            });\r\n        },\r\n        []\r\n    );\r\n\r\n    const onRemoveFollower = useCallback(\r\n        userId => () => {\r\n            dispatch({\r\n                type: REMOVE_FOLLOWER_REQUEST,\r\n                data: userId\r\n            });\r\n        },\r\n        []\r\n    );\r\n\r\n    const loadMoreFollowings = useCallback(() => {\r\n        dispatch({\r\n            type: LOAD_FOLLOWINGS_REQUEST,\r\n            offset: followingList.length\r\n        });\r\n    }, [followingList.length]);\r\n    const loadMoreFollowers = useCallback(() => {\r\n        dispatch({\r\n            type: LOAD_FOLLOWERS_REQUEST,\r\n            offset: followerList.length\r\n        });\r\n    }, [followerList.length]);\r\n\r\n    return (\r\n        <div>\r\n            <NicknameEditForm />\r\n            <FollowList\r\n                header={<div>팔로잉 목록</div>}\r\n                hasMore={hasMoreFollowing}\r\n                onClickmore={loadMoreFollowings}\r\n                data={followingList}\r\n                onClickStop={onUnfollow}\r\n            />\r\n\r\n            <FollowList\r\n                header={<div>팔로워 목록</div>}\r\n                hasMore={hasMoreFollower}\r\n                onClickmore={loadMoreFollowers}\r\n                data={followerList}\r\n                onClickStop={onRemoveFollower}\r\n            />\r\n\r\n            <div>\r\n                {mainPosts.map(c => (\r\n                    <PostCard key={+c.id} post={c} />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nProfile.getInitialProps = async context => {\r\n    const state = context.store.getState();\r\n    context.store.dispatch({\r\n        type: LOAD_FOLLOWERS_REQUEST,\r\n        data: state.user.me && state.user.me.id\r\n    });\r\n    context.store.dispatch({\r\n        type: LOAD_FOLLOWINGS_REQUEST,\r\n        data: state.user.me && state.user.me.id\r\n    });\r\n    context.store.dispatch({\r\n        type: LOAD_USER_POSTS_REQUEST,\r\n        data: state.user.me && state.user.me.id\r\n    });\r\n};\r\n\r\nexport default Profile;\r\n"]},"metadata":{},"sourceType":"module"}