{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useEffect, useCallback } from \"react\";\nimport { Form, Button, List, Card, Input, Icon } from \"antd\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport NicknameEditForm from \"../containers/NicknameEditForm\";\nimport { LOAD_FOLLOWERS_REQUEST, LOAD_FOLLOWINGS_REQUEST, UNFOLLOW_USER_REQUEST, REMOVE_FOLLOWER_REQUEST } from \"../reducers/user\";\nimport { LOAD_USER_POSTS_REQUEST } from \"../reducers/post\";\nimport PostCard from \"../containers/PostCard\";\n\nconst Profile = () => {\n  const dispatch = useDispatch();\n  const {\n    followerList,\n    followingList,\n    hasMoreFollowing,\n    hasMoreFollower\n  } = useSelector(state => state.user);\n  const {\n    mainPosts\n  } = useSelector(state => state.post);\n  const onUnfollow = useCallback(userId => () => {\n    dispatch({\n      type: UNFOLLOW_USER_REQUEST,\n      data: userId\n    });\n  }, []);\n  const onRemoveFollower = useCallback(userId => () => {\n    dispatch({\n      type: REMOVE_FOLLOWER_REQUEST,\n      data: userId\n    });\n  }, []);\n  const loadMoreFollowings = useCallback(() => {\n    dispatch({\n      type: LOAD_FOLLOWINGS_REQUEST,\n      offset: followingList.length\n    });\n  }, [followingList.length]);\n  const loadMoreFollowers = useCallback(() => {\n    dispatch({\n      type: LOAD_FOLLOWERS_REQUEST,\n      offset: followerList.length\n    });\n  }, [followerList.length]);\n  return __jsx(\"div\", null, __jsx(NicknameEditForm, null), __jsx(List, {\n    style: {\n      marginBottom: \"20px\"\n    },\n    grid: {\n      gutter: 4,\n      xs: 2,\n      md: 3\n    },\n    size: \"small\",\n    header: __jsx(\"div\", null, \"\\uD314\\uB85C\\uC789 \\uBAA9\\uB85D\"),\n    loadMore: hasMoreFollowing && __jsx(Button, {\n      style: {\n        width: \"100%\"\n      },\n      onClick: loadMoreFollowings\n    }, \"\\uB354\\uBCF4\\uAE30\"),\n    bordered: true,\n    dataSource: followingList,\n    renderItem: item => __jsx(List.Item, {\n      style: {\n        marginTop: \"20px\"\n      }\n    }, __jsx(Card, {\n      actions: [__jsx(Icon, {\n        key: \"stop\",\n        type: \"stop\",\n        onClick: onUnfollow(item.id)\n      })]\n    }, __jsx(Card.Meta, {\n      description: item.nickname\n    })))\n  }), __jsx(List, {\n    style: {\n      marginBottom: \"20px\"\n    },\n    grid: {\n      gutter: 4,\n      xs: 2,\n      md: 3\n    },\n    size: \"small\",\n    header: __jsx(\"div\", null, \"\\uD314\\uB85C\\uC6CC \\uBAA9\\uB85D\"),\n    loadMore: hasMoreFollower && __jsx(Button, {\n      style: {\n        width: \"100%\"\n      },\n      onClick: loadMoreFollowers\n    }, \"\\uB354\\uBCF4\\uAE30\"),\n    bordered: true,\n    dataSource: followerList,\n    renderItem: item => __jsx(List.Item, {\n      style: {\n        marginTop: \"20px\"\n      }\n    }, __jsx(Card, {\n      actions: [__jsx(Icon, {\n        key: \"stop\",\n        type: \"stop\",\n        onClick: onRemoveFollower(item.id)\n      })]\n    }, __jsx(Card.Meta, {\n      description: item.nickname\n    })))\n  }), __jsx(\"div\", null, mainPosts.map(c => __jsx(PostCard, {\n    key: +c.id,\n    post: c\n  }))));\n};\n\nProfile.getInitialProps = async context => {\n  const state = context.store.getState();\n  context.store.dispatch({\n    type: LOAD_FOLLOWERS_REQUEST,\n    data: state.user.me && state.user.me.id\n  });\n  context.store.dispatch({\n    type: LOAD_FOLLOWINGS_REQUEST,\n    data: state.user.me && state.user.me.id\n  });\n  context.store.dispatch({\n    type: LOAD_USER_POSTS_REQUEST,\n    data: state.user.me && state.user.me.id\n  });\n};\n\nexport default Profile;","map":{"version":3,"sources":["D:/project/react-nodebird/front/pages/profile.js"],"names":["React","useEffect","useCallback","Form","Button","List","Card","Input","Icon","useDispatch","useSelector","NicknameEditForm","LOAD_FOLLOWERS_REQUEST","LOAD_FOLLOWINGS_REQUEST","UNFOLLOW_USER_REQUEST","REMOVE_FOLLOWER_REQUEST","LOAD_USER_POSTS_REQUEST","PostCard","Profile","dispatch","followerList","followingList","hasMoreFollowing","hasMoreFollower","state","user","mainPosts","post","onUnfollow","userId","type","data","onRemoveFollower","loadMoreFollowings","offset","length","loadMoreFollowers","marginBottom","gutter","xs","md","width","item","marginTop","id","nickname","map","c","getInitialProps","context","store","getState","me"],"mappings":"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","sourcesContent":["import React, { useEffect, useCallback } from \"react\";\r\nimport { Form, Button, List, Card, Input, Icon } from \"antd\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport NicknameEditForm from \"../containers/NicknameEditForm\";\r\nimport {\r\n    LOAD_FOLLOWERS_REQUEST,\r\n    LOAD_FOLLOWINGS_REQUEST,\r\n    UNFOLLOW_USER_REQUEST,\r\n    REMOVE_FOLLOWER_REQUEST\r\n} from \"../reducers/user\";\r\nimport { LOAD_USER_POSTS_REQUEST } from \"../reducers/post\";\r\nimport PostCard from \"../containers/PostCard\";\r\n\r\nconst Profile = () => {\r\n    const dispatch = useDispatch();\r\n    const {\r\n        followerList,\r\n        followingList,\r\n        hasMoreFollowing,\r\n        hasMoreFollower\r\n    } = useSelector(state => state.user);\r\n    const { mainPosts } = useSelector(state => state.post);\r\n\r\n    const onUnfollow = useCallback(\r\n        userId => () => {\r\n            dispatch({\r\n                type: UNFOLLOW_USER_REQUEST,\r\n                data: userId\r\n            });\r\n        },\r\n        []\r\n    );\r\n\r\n    const onRemoveFollower = useCallback(\r\n        userId => () => {\r\n            dispatch({\r\n                type: REMOVE_FOLLOWER_REQUEST,\r\n                data: userId\r\n            });\r\n        },\r\n        []\r\n    );\r\n\r\n    const loadMoreFollowings = useCallback(() => {\r\n        dispatch({\r\n            type: LOAD_FOLLOWINGS_REQUEST,\r\n            offset: followingList.length\r\n        });\r\n    }, [followingList.length]);\r\n    const loadMoreFollowers = useCallback(() => {\r\n        dispatch({\r\n            type: LOAD_FOLLOWERS_REQUEST,\r\n            offset: followerList.length\r\n        });\r\n    }, [followerList.length]);\r\n\r\n    return (\r\n        <div>\r\n            <NicknameEditForm />\r\n            <List\r\n                style={{ marginBottom: \"20px\" }}\r\n                grid={{ gutter: 4, xs: 2, md: 3 }}\r\n                size=\"small\"\r\n                header={<div>팔로잉 목록</div>}\r\n                loadMore={\r\n                    hasMoreFollowing && (\r\n                        <Button\r\n                            style={{ width: \"100%\" }}\r\n                            onClick={loadMoreFollowings}\r\n                        >\r\n                            더보기\r\n                        </Button>\r\n                    )\r\n                }\r\n                bordered\r\n                dataSource={followingList}\r\n                renderItem={item => (\r\n                    <List.Item style={{ marginTop: \"20px\" }}>\r\n                        <Card\r\n                            actions={[\r\n                                <Icon\r\n                                    key=\"stop\"\r\n                                    type=\"stop\"\r\n                                    onClick={onUnfollow(item.id)}\r\n                                />\r\n                            ]}\r\n                        >\r\n                            <Card.Meta description={item.nickname} />\r\n                        </Card>\r\n                    </List.Item>\r\n                )}\r\n            />\r\n            <List\r\n                style={{ marginBottom: \"20px\" }}\r\n                grid={{ gutter: 4, xs: 2, md: 3 }}\r\n                size=\"small\"\r\n                header={<div>팔로워 목록</div>}\r\n                loadMore={\r\n                    hasMoreFollower && (\r\n                        <Button\r\n                            style={{ width: \"100%\" }}\r\n                            onClick={loadMoreFollowers}\r\n                        >\r\n                            더보기\r\n                        </Button>\r\n                    )\r\n                }\r\n                bordered\r\n                dataSource={followerList}\r\n                renderItem={item => (\r\n                    <List.Item style={{ marginTop: \"20px\" }}>\r\n                        <Card\r\n                            actions={[\r\n                                <Icon\r\n                                    key=\"stop\"\r\n                                    type=\"stop\"\r\n                                    onClick={onRemoveFollower(item.id)}\r\n                                />\r\n                            ]}\r\n                        >\r\n                            <Card.Meta description={item.nickname} />\r\n                        </Card>\r\n                    </List.Item>\r\n                )}\r\n            />\r\n            <div>\r\n                {mainPosts.map(c => (\r\n                    <PostCard key={+c.id} post={c} />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nProfile.getInitialProps = async context => {\r\n    const state = context.store.getState();\r\n    context.store.dispatch({\r\n        type: LOAD_FOLLOWERS_REQUEST,\r\n        data: state.user.me && state.user.me.id\r\n    });\r\n    context.store.dispatch({\r\n        type: LOAD_FOLLOWINGS_REQUEST,\r\n        data: state.user.me && state.user.me.id\r\n    });\r\n    context.store.dispatch({\r\n        type: LOAD_USER_POSTS_REQUEST,\r\n        data: state.user.me && state.user.me.id\r\n    });\r\n};\r\n\r\nexport default Profile;\r\n"]},"metadata":{},"sourceType":"module"}