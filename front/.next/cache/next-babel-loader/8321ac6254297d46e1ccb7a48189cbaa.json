{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport Head from \"next/head\";\nimport withRedux from \"next-redux-wrapper\";\nimport withReduxSaga from \"next-redux-saga\";\nimport { createStore, compose, applyMiddleware } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport createSagaMiddleware from \"redux-saga\";\nimport axios from \"axios\";\nimport Helmet from \"react-helmet\"; // import App from 'next/app';\n\nimport AppLayout from \"../components/AppLayout\";\nimport reducer from \"../reducers\";\nimport rootSaga from \"../sagas\";\nimport { LOAD_USER_REQUEST } from \"../reducers/user\";\n\nvar Nodebird = function Nodebird(_ref) {\n  var Component = _ref.Component,\n      store = _ref.store,\n      pageProps = _ref.pageProps;\n  // console.log(pageProps);\n  return __jsx(Provider, {\n    store: store\n  }, __jsx(Helmet, {\n    title: \"NodeBird\",\n    htmlAttributes: {\n      lang: \"ko\"\n    },\n    meta: [{\n      charset: \"UTF-8\"\n    }, {\n      name: \"viewport\",\n      content: \"width=device-width,initial-scale=1.0,minimum-scale=1.0,maximum-scale=1.0,user-scalable=yes,viewport-fit=cover\"\n    }, {\n      \"http-equiv\": \"X-UA-Compatible\",\n      content: \"IE=edge\"\n    }, {\n      name: \"description\",\n      content: \"팥우유의 NodeBird SNS\"\n    }, {\n      name: \"og:title\",\n      content: \"NodeBird\"\n    }, {\n      name: \"og:description\",\n      content: \"팥우유의 NodeBird SNS\"\n    }, {\n      property: \"og:type\",\n      content: \"website\"\n    }],\n    link: [{\n      rel: \"shortcut icon\",\n      href: \"/favicon.ico\"\n    }, {\n      rel: \"stylesheet\",\n      href: \"https://cdnjs.cloudflare.com/ajax/libs/antd/3.25.3/antd.css\"\n    }, {\n      rel: \"stylesheet\",\n      href: \"https://cdnjs.cloudflare.com/ajax/libs/slick-carousel/1.6.0/slick.min.css\"\n    }, {\n      rel: \"stylesheet\",\n      href: \"https://cdnjs.cloudflare.com/ajax/libs/slick-carousel/1.6.0/slick-theme.min.css\"\n    }]\n  }), __jsx(AppLayout, null, __jsx(Component, pageProps)));\n};\n\n// getInitialProps\n// next에서 지원하는 react의 라이프 사이클같은 기능\n// 서버에서 받은 동적인 데이터를 프론트에서 사용할 수 있음.\n// react componentDidMount보다 더 빨리 실행됨.\n// 서버에서도 실행됨.\n// 서버 사이드 렌더링 작업을 할 때 용이함.\nNodebird.getInitialProps = function _callee(context) {\n  var ctx, Component, pageProps, state, cookie;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          //context -> next에서 내려주는 것\n          // console.log(context);\n          ctx = context.ctx, Component = context.Component;\n          pageProps = {}; // store 안에 있는 로그인 정보를 getState 메서드를 통해 가져올 수 있음.\n\n          state = ctx.store.getState(); // 클라이언트 -> 백엔드 서버간 통신할 땐 브라우저가 쿠키를 챙겨주나\n          // 서버와 서버간 통신일 땐 ex)프론트 서버(서버사이드 렌더링) - 백엔드 서버\n          // 개발자가 직접 쿠키를 전달해줘야 한다.\n\n          cookie = ctx.isServer ? ctx.req.headers.cookie : \"\"; // console.log('쿠키', cookie);\n          // axios를 통해 프론트 서버에서 백엔드 서버로 쿠키를 직접 전달\n          //\n\n          if (ctx.isServer && cookie) {\n            axios.defaults.headers.Cookie = cookie;\n          }\n\n          if (!state.user.me) {\n            ctx.store.dispatch({\n              type: LOAD_USER_REQUEST\n            });\n          }\n\n          if (!Component.getInitialProps) {\n            _context.next = 13;\n            break;\n          }\n\n          _context.next = 9;\n          return _regeneratorRuntime.awrap(Component.getInitialProps(ctx));\n\n        case 9:\n          _context.t0 = _context.sent;\n\n          if (_context.t0) {\n            _context.next = 12;\n            break;\n          }\n\n          _context.t0 = {};\n\n        case 12:\n          pageProps = _context.t0;\n\n        case 13:\n          return _context.abrupt(\"return\", {\n            pageProps: pageProps\n          });\n\n        case 14:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nvar configStore = function configStore(initialState, options) {\n  var sagaMiddleware = createSagaMiddleware();\n  var middlewares = [sagaMiddleware, function (store) {\n    return function (next) {\n      return function (action) {\n        // console.log(action);\n        next(action);\n      };\n    };\n  }];\n  var enhancer = true ? compose(applyMiddleware.apply(void 0, middlewares)) : compose( // middleware끼리 합성\n  applyMiddleware.apply(void 0, middlewares), !options.isServer && window.__REDUX_DEVTOOLS_EXTENSION__ !== \"undefined\" // chrome redux devtools 사용 코드\n  ? window.__REDUX_DEVTOOLS_EXTENSION__() : function (f) {\n    return f;\n  });\n  var store = createStore(reducer, initialState, enhancer); // next에서 redux-saga를 이용해 서버사이드 렌더링을 가능하게 해주는 코드\n\n  store.sagaTask = sagaMiddleware.run(rootSaga);\n  return store;\n}; // next-redux-saga -> next 서버에서 redux-saga를 사용할 수 있게 해주는 플러그인\n// next-redux-saga 설치 후 모든 프론트영역을 감싸는 코드영역의 export 코드를 감싸준다(고차 컴포넌트)\n// 고차 컴포넌트\n\n\nexport default withRedux(configStore)(withReduxSaga(Nodebird));","map":{"version":3,"sources":["D:/project/react-nodebird/front/pages/_app.js"],"names":["React","Head","withRedux","withReduxSaga","createStore","compose","applyMiddleware","Provider","createSagaMiddleware","axios","Helmet","AppLayout","reducer","rootSaga","LOAD_USER_REQUEST","Nodebird","Component","store","pageProps","lang","charset","name","content","property","rel","href","getInitialProps","context","ctx","state","getState","cookie","isServer","req","headers","defaults","Cookie","user","me","dispatch","type","configStore","initialState","options","sagaMiddleware","middlewares","next","action","enhancer","window","__REDUX_DEVTOOLS_EXTENSION__","f","sagaTask","run"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport Head from \"next/head\";\r\nimport Proptypes from \"prop-types\";\r\nimport withRedux from \"next-redux-wrapper\";\r\nimport withReduxSaga from \"next-redux-saga\";\r\nimport { createStore, compose, applyMiddleware } from \"redux\";\r\nimport { Provider } from \"react-redux\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport axios from \"axios\";\r\nimport Helmet from \"react-helmet\";\r\n// import App from 'next/app';\r\n\r\nimport AppLayout from \"../components/AppLayout\";\r\nimport reducer from \"../reducers\";\r\nimport rootSaga from \"../sagas\";\r\nimport { LOAD_USER_REQUEST } from \"../reducers/user\";\r\n\r\nconst Nodebird = ({ Component, store, pageProps }) => {\r\n    // console.log(pageProps);\r\n    return (\r\n        <Provider store={store}>\r\n            <Helmet\r\n                title=\"NodeBird\"\r\n                htmlAttributes={{ lang: \"ko\" }}\r\n                meta={[\r\n                    {\r\n                        charset: \"UTF-8\"\r\n                    },\r\n                    {\r\n                        name: \"viewport\",\r\n                        content:\r\n                            \"width=device-width,initial-scale=1.0,minimum-scale=1.0,maximum-scale=1.0,user-scalable=yes,viewport-fit=cover\"\r\n                    },\r\n                    {\r\n                        \"http-equiv\": \"X-UA-Compatible\",\r\n                        content: \"IE=edge\"\r\n                    },\r\n                    {\r\n                        name: \"description\",\r\n                        content: \"팥우유의 NodeBird SNS\"\r\n                    },\r\n                    {\r\n                        name: \"og:title\",\r\n                        content: \"NodeBird\"\r\n                    },\r\n                    {\r\n                        name: \"og:description\",\r\n                        content: \"팥우유의 NodeBird SNS\"\r\n                    },\r\n                    {\r\n                        property: \"og:type\",\r\n                        content: \"website\"\r\n                    }\r\n                ]}\r\n                link={[\r\n                    {\r\n                        rel: \"shortcut icon\",\r\n                        href: \"/favicon.ico\"\r\n                    },\r\n                    {\r\n                        rel: \"stylesheet\",\r\n                        href:\r\n                            \"https://cdnjs.cloudflare.com/ajax/libs/antd/3.25.3/antd.css\"\r\n                    },\r\n                    {\r\n                        rel: \"stylesheet\",\r\n                        href:\r\n                            \"https://cdnjs.cloudflare.com/ajax/libs/slick-carousel/1.6.0/slick.min.css\"\r\n                    },\r\n                    {\r\n                        rel: \"stylesheet\",\r\n                        href:\r\n                            \"https://cdnjs.cloudflare.com/ajax/libs/slick-carousel/1.6.0/slick-theme.min.css\"\r\n                    }\r\n                ]}\r\n            />\r\n\r\n            <AppLayout>\r\n                <Component {...pageProps} />\r\n            </AppLayout>\r\n        </Provider>\r\n    );\r\n};\r\n\r\nNodebird.propTypes = {\r\n    Component: Proptypes.elementType.isRequired,\r\n    store: Proptypes.object.isRequired,\r\n    pageProps: Proptypes.object.isRequired\r\n};\r\n// getInitialProps\r\n// next에서 지원하는 react의 라이프 사이클같은 기능\r\n// 서버에서 받은 동적인 데이터를 프론트에서 사용할 수 있음.\r\n// react componentDidMount보다 더 빨리 실행됨.\r\n// 서버에서도 실행됨.\r\n// 서버 사이드 렌더링 작업을 할 때 용이함.\r\nNodebird.getInitialProps = async context => {\r\n    //context -> next에서 내려주는 것\r\n    // console.log(context);\r\n    const { ctx, Component } = context;\r\n    let pageProps = {};\r\n    // store 안에 있는 로그인 정보를 getState 메서드를 통해 가져올 수 있음.\r\n    const state = ctx.store.getState();\r\n    // 클라이언트 -> 백엔드 서버간 통신할 땐 브라우저가 쿠키를 챙겨주나\r\n    // 서버와 서버간 통신일 땐 ex)프론트 서버(서버사이드 렌더링) - 백엔드 서버\r\n    // 개발자가 직접 쿠키를 전달해줘야 한다.\r\n    const cookie = ctx.isServer ? ctx.req.headers.cookie : \"\";\r\n    // console.log('쿠키', cookie);\r\n    // axios를 통해 프론트 서버에서 백엔드 서버로 쿠키를 직접 전달\r\n    //\r\n    if (ctx.isServer && cookie) {\r\n        axios.defaults.headers.Cookie = cookie;\r\n    }\r\n    if (!state.user.me) {\r\n        ctx.store.dispatch({\r\n            type: LOAD_USER_REQUEST\r\n        });\r\n    }\r\n    if (Component.getInitialProps) {\r\n        // Component에 getInitialProps가 있을 경우 실행\r\n        pageProps = (await Component.getInitialProps(ctx)) || {}; // Component 컴포넌트에 props 전달(실행)\r\n    }\r\n    return { pageProps };\r\n};\r\n\r\nconst configStore = (initialState, options) => {\r\n    const sagaMiddleware = createSagaMiddleware();\r\n    const middlewares = [\r\n        sagaMiddleware,\r\n        store => next => action => {\r\n            // console.log(action);\r\n            next(action);\r\n        }\r\n    ];\r\n    const enhancer =\r\n        process.env.NODE_ENV === \"production\"\r\n            ? compose(applyMiddleware(...middlewares))\r\n            : compose(\r\n                  // middleware끼리 합성\r\n                  applyMiddleware(...middlewares),\r\n                  !options.isServer &&\r\n                      window.__REDUX_DEVTOOLS_EXTENSION__ !== \"undefined\" // chrome redux devtools 사용 코드\r\n                      ? window.__REDUX_DEVTOOLS_EXTENSION__()\r\n                      : f => f\r\n              );\r\n    const store = createStore(reducer, initialState, enhancer);\r\n    // next에서 redux-saga를 이용해 서버사이드 렌더링을 가능하게 해주는 코드\r\n    store.sagaTask = sagaMiddleware.run(rootSaga);\r\n    return store;\r\n};\r\n\r\n// next-redux-saga -> next 서버에서 redux-saga를 사용할 수 있게 해주는 플러그인\r\n// next-redux-saga 설치 후 모든 프론트영역을 감싸는 코드영역의 export 코드를 감싸준다(고차 컴포넌트)\r\n\r\n// 고차 컴포넌트\r\nexport default withRedux(configStore)(withReduxSaga(Nodebird));\r\n"]},"metadata":{},"sourceType":"module"}