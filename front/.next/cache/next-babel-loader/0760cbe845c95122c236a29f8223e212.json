{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(logIn),\n    _marked2 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchLogin),\n    _marked3 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(signUp),\n    _marked4 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchSignUp),\n    _marked5 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(logOut),\n    _marked6 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchLogOut),\n    _marked7 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(loadUser),\n    _marked8 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchLoadUser),\n    _marked9 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(follow),\n    _marked10 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchFollow),\n    _marked11 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(unfollow),\n    _marked12 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchUnfollow),\n    _marked13 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(loadFollowers),\n    _marked14 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchLoadFollowers),\n    _marked15 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(loadFollowings),\n    _marked16 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchLoadFollowings),\n    _marked17 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(removeFollower),\n    _marked18 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchRemoveFollower),\n    _marked19 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(editNickname),\n    _marked20 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchEditNickname),\n    _marked21 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(userSaga);\n\nimport { all, fork, takeEvery, takeLatest, put, take, delay, call } from \"redux-saga/effects\";\nimport { LOG_IN_SUCCESS, LOG_IN_FAILURE, LOG_IN_REQUEST, SIGN_UP_REQUEST, SIGN_UP_SUCCESS, SIGN_UP_FAILURE, LOG_OUT_REQUEST, LOG_OUT_SUCCESS, LOG_OUT_FAILURE, LOAD_USER_REQUEST, LOAD_USER_SUCCESS, LOAD_USER_FAILURE, FOLLOW_USER_REQUEST, FOLLOW_USER_SUCCESS, FOLLOW_USER_FAILURE, UNFOLLOW_USER_REQUEST, UNFOLLOW_USER_SUCCESS, UNFOLLOW_USER_FAILURE, LOAD_FOLLOWERS_REQUEST, LOAD_FOLLOWERS_SUCCESS, LOAD_FOLLOWERS_FAILURE, LOAD_FOLLOWINGS_REQUEST, LOAD_FOLLOWINGS_SUCCESS, LOAD_FOLLOWINGS_FAILURE, REMOVE_FOLLOWER_REQUEST, REMOVE_FOLLOWER_SUCCESS, REMOVE_FOLLOWER_FAILURE, EDIT_NICKNAME_REQUEST, EDIT_NICKNAME_SUCCESS, EDIT_NICKNAME_FAILURE } from \"../reducers/user\";\nimport axios from \"axios\";\n\nfunction loginAPI(loginData) {\n  return axios.post(\"/user/login\", loginData, {\n    withCredentials: true\n  });\n}\n\nfunction logIn(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function logIn$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return call(loginAPI, action.data);\n\n        case 3:\n          result = _context.sent;\n          _context.next = 6;\n          return put({\n            // put은 dispatch 동일\n            type: LOG_IN_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context.next = 13;\n          break;\n\n        case 8:\n          _context.prev = 8;\n          _context.t0 = _context[\"catch\"](0);\n          // loginAPI 실패\n          console.error(_context.t0);\n          _context.next = 13;\n          return put({\n            type: LOG_IN_FAILURE,\n            error: _context.t0.response && _context.t0.response.data\n          });\n\n        case 13:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 8]]);\n}\n\nfunction watchLogin() {\n  return _regeneratorRuntime.wrap(function watchLogin$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return takeEvery(LOG_IN_REQUEST, logIn);\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}\n\nfunction signUpAPI(signUpdata) {\n  return axios.post(\"/user\", signUpdata);\n}\n\nfunction signUp(action) {\n  return _regeneratorRuntime.wrap(function signUp$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          _context3.next = 3;\n          return call(signUpAPI, action.data);\n\n        case 3:\n          _context3.next = 5;\n          return put({\n            // put은 dispatch 동일\n            type: SIGN_UP_SUCCESS\n          });\n\n        case 5:\n          _context3.next = 12;\n          break;\n\n        case 7:\n          _context3.prev = 7;\n          _context3.t0 = _context3[\"catch\"](0);\n          // loginAPI 실패\n          console.error(_context3.t0);\n          _context3.next = 12;\n          return put({\n            type: SIGN_UP_FAILURE,\n            error: _context3.t0\n          });\n\n        case 12:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, null, [[0, 7]]);\n}\n\nfunction watchSignUp() {\n  return _regeneratorRuntime.wrap(function watchSignUp$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return takeEvery(SIGN_UP_REQUEST, signUp);\n\n        case 2:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4);\n}\n\nfunction logOutAPI() {\n  return axios.post(\"/user/logout\", {}, {\n    withCredentials: true\n  });\n}\n\nfunction logOut() {\n  return _regeneratorRuntime.wrap(function logOut$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.prev = 0;\n          _context5.next = 3;\n          return call(logOutAPI);\n\n        case 3:\n          _context5.next = 5;\n          return put({\n            // put은 dispatch 동일\n            type: LOG_OUT_SUCCESS\n          });\n\n        case 5:\n          _context5.next = 12;\n          break;\n\n        case 7:\n          _context5.prev = 7;\n          _context5.t0 = _context5[\"catch\"](0);\n          // loginAPI 실패\n          console.error(_context5.t0);\n          _context5.next = 12;\n          return put({\n            type: LOG_OUT_FAILURE,\n            error: _context5.t0\n          });\n\n        case 12:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5, null, [[0, 7]]);\n}\n\nfunction watchLogOut() {\n  return _regeneratorRuntime.wrap(function watchLogOut$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.next = 2;\n          return takeEvery(LOG_OUT_REQUEST, logOut);\n\n        case 2:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked6);\n}\n\nfunction loadUserAPI(userId) {\n  return axios.get(userId ? \"/user/\".concat(userId) : \"/user/\", {\n    withCredentials: true\n  });\n}\n\nfunction loadUser(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function loadUser$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          _context7.prev = 0;\n          _context7.next = 3;\n          return call(loadUserAPI, action.data);\n\n        case 3:\n          result = _context7.sent;\n          _context7.next = 6;\n          return put({\n            // put은 dispatch 동일\n            type: LOAD_USER_SUCCESS,\n            data: result.data,\n            me: !action.data // userId가 없으면 내 정보를 불러옴\n\n          });\n\n        case 6:\n          _context7.next = 13;\n          break;\n\n        case 8:\n          _context7.prev = 8;\n          _context7.t0 = _context7[\"catch\"](0);\n          // loginAPI 실패\n          console.log(\"load user failure error\", _context7.t0);\n          _context7.next = 13;\n          return put({\n            type: LOAD_USER_FAILURE,\n            error: _context7.t0\n          });\n\n        case 13:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, _marked7, null, [[0, 8]]);\n}\n\nfunction watchLoadUser() {\n  return _regeneratorRuntime.wrap(function watchLoadUser$(_context8) {\n    while (1) {\n      switch (_context8.prev = _context8.next) {\n        case 0:\n          _context8.next = 2;\n          return takeEvery(LOAD_USER_REQUEST, loadUser);\n\n        case 2:\n        case \"end\":\n          return _context8.stop();\n      }\n    }\n  }, _marked8);\n}\n\nfunction followAPI(userId) {\n  return axios.post(\"/user/\".concat(userId, \"/follow\"), {}, {\n    withCredentials: true\n  });\n}\n\nfunction follow(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function follow$(_context9) {\n    while (1) {\n      switch (_context9.prev = _context9.next) {\n        case 0:\n          _context9.prev = 0;\n          _context9.next = 3;\n          return call(followAPI, action.data);\n\n        case 3:\n          result = _context9.sent;\n          _context9.next = 6;\n          return put({\n            // put은 dispatch 동일\n            type: FOLLOW_USER_SUCCESS,\n            data: result.data,\n            me: !action.data // userId가 없으면 내 정보를 불러옴\n\n          });\n\n        case 6:\n          _context9.next = 12;\n          break;\n\n        case 8:\n          _context9.prev = 8;\n          _context9.t0 = _context9[\"catch\"](0);\n          _context9.next = 12;\n          return put({\n            type: FOLLOW_USER_FAILURE,\n            error: _context9.t0\n          });\n\n        case 12:\n        case \"end\":\n          return _context9.stop();\n      }\n    }\n  }, _marked9, null, [[0, 8]]);\n}\n\nfunction watchFollow() {\n  return _regeneratorRuntime.wrap(function watchFollow$(_context10) {\n    while (1) {\n      switch (_context10.prev = _context10.next) {\n        case 0:\n          _context10.next = 2;\n          return takeEvery(FOLLOW_USER_REQUEST, follow);\n\n        case 2:\n        case \"end\":\n          return _context10.stop();\n      }\n    }\n  }, _marked10);\n}\n\nfunction unfollowAPI(userId) {\n  return axios[\"delete\"](\"/user/\".concat(userId, \"/follow\"), {\n    withCredentials: true\n  });\n}\n\nfunction unfollow(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function unfollow$(_context11) {\n    while (1) {\n      switch (_context11.prev = _context11.next) {\n        case 0:\n          _context11.prev = 0;\n          _context11.next = 3;\n          return call(unfollowAPI, action.data);\n\n        case 3:\n          result = _context11.sent;\n          _context11.next = 6;\n          return put({\n            // put은 dispatch 동일\n            type: UNFOLLOW_USER_SUCCESS,\n            data: result.data,\n            me: !action.data // userId가 없으면 내 정보를 불러옴\n\n          });\n\n        case 6:\n          _context11.next = 12;\n          break;\n\n        case 8:\n          _context11.prev = 8;\n          _context11.t0 = _context11[\"catch\"](0);\n          _context11.next = 12;\n          return put({\n            type: UNFOLLOW_USER_FAILURE,\n            error: _context11.t0\n          });\n\n        case 12:\n        case \"end\":\n          return _context11.stop();\n      }\n    }\n  }, _marked11, null, [[0, 8]]);\n}\n\nfunction watchUnfollow() {\n  return _regeneratorRuntime.wrap(function watchUnfollow$(_context12) {\n    while (1) {\n      switch (_context12.prev = _context12.next) {\n        case 0:\n          _context12.next = 2;\n          return takeEvery(UNFOLLOW_USER_REQUEST, unfollow);\n\n        case 2:\n        case \"end\":\n          return _context12.stop();\n      }\n    }\n  }, _marked12);\n}\n\nfunction loadFollowersAPI(userId) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var limit = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 3;\n  return axios.get(\"/user/\".concat(userId || 0, \"/followers?offset=\").concat(offset, \"&limit=\").concat(limit), {\n    withCredentials: true\n  });\n}\n\nfunction loadFollowers(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function loadFollowers$(_context13) {\n    while (1) {\n      switch (_context13.prev = _context13.next) {\n        case 0:\n          _context13.prev = 0;\n          _context13.next = 3;\n          return call(loadFollowersAPI, action.data, action.offset);\n\n        case 3:\n          result = _context13.sent;\n          _context13.next = 6;\n          return put({\n            type: LOAD_FOLLOWERS_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context13.next = 12;\n          break;\n\n        case 8:\n          _context13.prev = 8;\n          _context13.t0 = _context13[\"catch\"](0);\n          _context13.next = 12;\n          return put({\n            type: LOAD_FOLLOWERS_FAILURE,\n            error: _context13.t0\n          });\n\n        case 12:\n        case \"end\":\n          return _context13.stop();\n      }\n    }\n  }, _marked13, null, [[0, 8]]);\n}\n\nfunction watchLoadFollowers() {\n  return _regeneratorRuntime.wrap(function watchLoadFollowers$(_context14) {\n    while (1) {\n      switch (_context14.prev = _context14.next) {\n        case 0:\n          _context14.next = 2;\n          return takeEvery(LOAD_FOLLOWERS_REQUEST, loadFollowers);\n\n        case 2:\n        case \"end\":\n          return _context14.stop();\n      }\n    }\n  }, _marked14);\n}\n\nfunction loadFollowingsAPI(userId) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var limit = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 3;\n  return axios.get(\"/user/\".concat(userId || 0, \"/followings?offset=\").concat(offset, \"&limit=\").concat(limit), {\n    withCredentials: true\n  });\n}\n\nfunction loadFollowings(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function loadFollowings$(_context15) {\n    while (1) {\n      switch (_context15.prev = _context15.next) {\n        case 0:\n          _context15.prev = 0;\n          _context15.next = 3;\n          return call(loadFollowingsAPI, action.data, action.offset);\n\n        case 3:\n          result = _context15.sent;\n          _context15.next = 6;\n          return put({\n            type: LOAD_FOLLOWINGS_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context15.next = 12;\n          break;\n\n        case 8:\n          _context15.prev = 8;\n          _context15.t0 = _context15[\"catch\"](0);\n          _context15.next = 12;\n          return put({\n            type: LOAD_FOLLOWINGS_FAILURE,\n            error: _context15.t0\n          });\n\n        case 12:\n        case \"end\":\n          return _context15.stop();\n      }\n    }\n  }, _marked15, null, [[0, 8]]);\n}\n\nfunction watchLoadFollowings() {\n  return _regeneratorRuntime.wrap(function watchLoadFollowings$(_context16) {\n    while (1) {\n      switch (_context16.prev = _context16.next) {\n        case 0:\n          _context16.next = 2;\n          return takeEvery(LOAD_FOLLOWINGS_REQUEST, loadFollowings);\n\n        case 2:\n        case \"end\":\n          return _context16.stop();\n      }\n    }\n  }, _marked16);\n}\n\nfunction removeFollowerAPI(userId) {\n  return axios[\"delete\"](\"/user/\".concat(userId, \"/follower\"), {\n    withCredentials: true\n  });\n}\n\nfunction removeFollower(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function removeFollower$(_context17) {\n    while (1) {\n      switch (_context17.prev = _context17.next) {\n        case 0:\n          _context17.prev = 0;\n          _context17.next = 3;\n          return call(removeFollowerAPI, action.data);\n\n        case 3:\n          result = _context17.sent;\n          _context17.next = 6;\n          return put({\n            type: REMOVE_FOLLOWER_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context17.next = 12;\n          break;\n\n        case 8:\n          _context17.prev = 8;\n          _context17.t0 = _context17[\"catch\"](0);\n          _context17.next = 12;\n          return put({\n            type: REMOVE_FOLLOWER_FAILURE,\n            error: _context17.t0.response && _context17.t0.response.data\n          });\n\n        case 12:\n        case \"end\":\n          return _context17.stop();\n      }\n    }\n  }, _marked17, null, [[0, 8]]);\n}\n\nfunction watchRemoveFollower() {\n  return _regeneratorRuntime.wrap(function watchRemoveFollower$(_context18) {\n    while (1) {\n      switch (_context18.prev = _context18.next) {\n        case 0:\n          _context18.next = 2;\n          return takeEvery(REMOVE_FOLLOWER_REQUEST, removeFollower);\n\n        case 2:\n        case \"end\":\n          return _context18.stop();\n      }\n    }\n  }, _marked18);\n}\n\nfunction editNicknameAPI(nickname) {\n  return axios.patch(\"/user/nickname\", {\n    nickname: nickname\n  }, {\n    withCredentials: true\n  });\n}\n\nfunction editNickname(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function editNickname$(_context19) {\n    while (1) {\n      switch (_context19.prev = _context19.next) {\n        case 0:\n          _context19.prev = 0;\n          _context19.next = 3;\n          return call(editNicknameAPI, action.data);\n\n        case 3:\n          result = _context19.sent;\n          _context19.next = 6;\n          return put({\n            type: EDIT_NICKNAME_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context19.next = 13;\n          break;\n\n        case 8:\n          _context19.prev = 8;\n          _context19.t0 = _context19[\"catch\"](0);\n          console.error(_context19.t0);\n          _context19.next = 13;\n          return put({\n            type: EDIT_NICKNAME_FAILURE,\n            error: _context19.t0\n          });\n\n        case 13:\n        case \"end\":\n          return _context19.stop();\n      }\n    }\n  }, _marked19, null, [[0, 8]]);\n}\n\nfunction watchEditNickname() {\n  return _regeneratorRuntime.wrap(function watchEditNickname$(_context20) {\n    while (1) {\n      switch (_context20.prev = _context20.next) {\n        case 0:\n          _context20.next = 2;\n          return takeEvery(EDIT_NICKNAME_REQUEST, editNickname);\n\n        case 2:\n        case \"end\":\n          return _context20.stop();\n      }\n    }\n  }, _marked20);\n}\n\nexport default function userSaga() {\n  return _regeneratorRuntime.wrap(function userSaga$(_context21) {\n    while (1) {\n      switch (_context21.prev = _context21.next) {\n        case 0:\n          _context21.next = 2;\n          return all([fork(watchLogin), fork(watchSignUp), fork(watchLogOut), fork(watchLoadUser), fork(watchFollow), fork(watchUnfollow), fork(watchLoadFollowers), fork(watchLoadFollowings), fork(watchRemoveFollower), fork(watchEditNickname)]);\n\n        case 2:\n        case \"end\":\n          return _context21.stop();\n      }\n    }\n  }, _marked21);\n}","map":{"version":3,"sources":["D:/project/react-nodebird/front/sagas/user.js"],"names":["logIn","watchLogin","signUp","watchSignUp","logOut","watchLogOut","loadUser","watchLoadUser","follow","watchFollow","unfollow","watchUnfollow","loadFollowers","watchLoadFollowers","loadFollowings","watchLoadFollowings","removeFollower","watchRemoveFollower","editNickname","watchEditNickname","userSaga","all","fork","takeEvery","takeLatest","put","take","delay","call","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOG_IN_REQUEST","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","LOAD_USER_REQUEST","LOAD_USER_SUCCESS","LOAD_USER_FAILURE","FOLLOW_USER_REQUEST","FOLLOW_USER_SUCCESS","FOLLOW_USER_FAILURE","UNFOLLOW_USER_REQUEST","UNFOLLOW_USER_SUCCESS","UNFOLLOW_USER_FAILURE","LOAD_FOLLOWERS_REQUEST","LOAD_FOLLOWERS_SUCCESS","LOAD_FOLLOWERS_FAILURE","LOAD_FOLLOWINGS_REQUEST","LOAD_FOLLOWINGS_SUCCESS","LOAD_FOLLOWINGS_FAILURE","REMOVE_FOLLOWER_REQUEST","REMOVE_FOLLOWER_SUCCESS","REMOVE_FOLLOWER_FAILURE","EDIT_NICKNAME_REQUEST","EDIT_NICKNAME_SUCCESS","EDIT_NICKNAME_FAILURE","axios","loginAPI","loginData","post","withCredentials","action","data","result","type","console","error","response","signUpAPI","signUpdata","logOutAPI","loadUserAPI","userId","get","me","log","followAPI","unfollowAPI","loadFollowersAPI","offset","limit","loadFollowingsAPI","removeFollowerAPI","editNicknameAPI","nickname","patch"],"mappings":"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","sourcesContent":["import {\r\n    all,\r\n    fork,\r\n    takeEvery,\r\n    takeLatest,\r\n    put,\r\n    take,\r\n    delay,\r\n    call\r\n} from \"redux-saga/effects\";\r\nimport {\r\n    LOG_IN_SUCCESS,\r\n    LOG_IN_FAILURE,\r\n    LOG_IN_REQUEST,\r\n    SIGN_UP_REQUEST,\r\n    SIGN_UP_SUCCESS,\r\n    SIGN_UP_FAILURE,\r\n    LOG_OUT_REQUEST,\r\n    LOG_OUT_SUCCESS,\r\n    LOG_OUT_FAILURE,\r\n    LOAD_USER_REQUEST,\r\n    LOAD_USER_SUCCESS,\r\n    LOAD_USER_FAILURE,\r\n    FOLLOW_USER_REQUEST,\r\n    FOLLOW_USER_SUCCESS,\r\n    FOLLOW_USER_FAILURE,\r\n    UNFOLLOW_USER_REQUEST,\r\n    UNFOLLOW_USER_SUCCESS,\r\n    UNFOLLOW_USER_FAILURE,\r\n    LOAD_FOLLOWERS_REQUEST,\r\n    LOAD_FOLLOWERS_SUCCESS,\r\n    LOAD_FOLLOWERS_FAILURE,\r\n    LOAD_FOLLOWINGS_REQUEST,\r\n    LOAD_FOLLOWINGS_SUCCESS,\r\n    LOAD_FOLLOWINGS_FAILURE,\r\n    REMOVE_FOLLOWER_REQUEST,\r\n    REMOVE_FOLLOWER_SUCCESS,\r\n    REMOVE_FOLLOWER_FAILURE,\r\n    EDIT_NICKNAME_REQUEST,\r\n    EDIT_NICKNAME_SUCCESS,\r\n    EDIT_NICKNAME_FAILURE\r\n} from \"../reducers/user\";\r\nimport axios from \"axios\";\r\n\r\nfunction loginAPI(loginData) {\r\n    return axios.post(\"/user/login\", loginData, {\r\n        withCredentials: true\r\n    });\r\n}\r\n\r\nfunction* logIn(action) {\r\n    try {\r\n        const result = yield call(loginAPI, action.data);\r\n        yield put({\r\n            // put은 dispatch 동일\r\n            type: LOG_IN_SUCCESS,\r\n            data: result.data\r\n        });\r\n    } catch (e) {\r\n        // loginAPI 실패\r\n        console.error(e);\r\n        yield put({\r\n            type: LOG_IN_FAILURE,\r\n            error: e.response && e.response.data\r\n        });\r\n    }\r\n}\r\n\r\nfunction* watchLogin() {\r\n    yield takeEvery(LOG_IN_REQUEST, logIn);\r\n}\r\n\r\nfunction signUpAPI(signUpdata) {\r\n    return axios.post(\"/user\", signUpdata);\r\n}\r\n\r\nfunction* signUp(action) {\r\n    try {\r\n        // yield fork(logger); logger는 내 기록을 로깅하는 함수\r\n        // yield call(signUpAPI);\r\n        yield call(signUpAPI, action.data);\r\n        yield put({\r\n            // put은 dispatch 동일\r\n            type: SIGN_UP_SUCCESS\r\n        });\r\n    } catch (e) {\r\n        // loginAPI 실패\r\n        console.error(e);\r\n        yield put({\r\n            type: SIGN_UP_FAILURE,\r\n            error: e\r\n        });\r\n    }\r\n}\r\n\r\nfunction* watchSignUp() {\r\n    yield takeEvery(SIGN_UP_REQUEST, signUp);\r\n}\r\n\r\nfunction logOutAPI() {\r\n    return axios.post(\r\n        \"/user/logout\",\r\n        {},\r\n        {\r\n            withCredentials: true\r\n        }\r\n    );\r\n}\r\n\r\nfunction* logOut() {\r\n    try {\r\n        yield call(logOutAPI);\r\n        yield put({\r\n            // put은 dispatch 동일\r\n            type: LOG_OUT_SUCCESS\r\n        });\r\n    } catch (e) {\r\n        // loginAPI 실패\r\n        console.error(e);\r\n        yield put({\r\n            type: LOG_OUT_FAILURE,\r\n            error: e\r\n        });\r\n    }\r\n}\r\n\r\nfunction* watchLogOut() {\r\n    yield takeEvery(LOG_OUT_REQUEST, logOut);\r\n}\r\n\r\nfunction loadUserAPI(userId) {\r\n    return axios.get(userId ? `/user/${userId}` : \"/user/\", {\r\n        withCredentials: true\r\n    });\r\n}\r\n\r\nfunction* loadUser(action) {\r\n    try {\r\n        const result = yield call(loadUserAPI, action.data);\r\n        // console.log(\"loadUser action data confirm\", action.data);\r\n        yield put({\r\n            // put은 dispatch 동일\r\n            type: LOAD_USER_SUCCESS,\r\n            data: result.data,\r\n            me: !action.data // userId가 없으면 내 정보를 불러옴\r\n        });\r\n    } catch (e) {\r\n        // loginAPI 실패\r\n        console.log(\"load user failure error\", e);\r\n        yield put({\r\n            type: LOAD_USER_FAILURE,\r\n            error: e\r\n        });\r\n    }\r\n}\r\n\r\nfunction* watchLoadUser() {\r\n    yield takeEvery(LOAD_USER_REQUEST, loadUser);\r\n}\r\n\r\nfunction followAPI(userId) {\r\n    return axios.post(\r\n        `/user/${userId}/follow`,\r\n        {},\r\n        {\r\n            withCredentials: true\r\n        }\r\n    );\r\n}\r\n\r\nfunction* follow(action) {\r\n    try {\r\n        const result = yield call(followAPI, action.data);\r\n        yield put({\r\n            // put은 dispatch 동일\r\n            type: FOLLOW_USER_SUCCESS,\r\n            data: result.data,\r\n            me: !action.data // userId가 없으면 내 정보를 불러옴\r\n        });\r\n    } catch (e) {\r\n        // loginAPI 실패\r\n        yield put({\r\n            type: FOLLOW_USER_FAILURE,\r\n            error: e\r\n        });\r\n    }\r\n}\r\n\r\nfunction* watchFollow() {\r\n    yield takeEvery(FOLLOW_USER_REQUEST, follow);\r\n}\r\n\r\nfunction unfollowAPI(userId) {\r\n    return axios.delete(`/user/${userId}/follow`, {\r\n        withCredentials: true\r\n    });\r\n}\r\n\r\nfunction* unfollow(action) {\r\n    try {\r\n        const result = yield call(unfollowAPI, action.data);\r\n        yield put({\r\n            // put은 dispatch 동일\r\n            type: UNFOLLOW_USER_SUCCESS,\r\n            data: result.data,\r\n            me: !action.data // userId가 없으면 내 정보를 불러옴\r\n        });\r\n    } catch (e) {\r\n        // loginAPI 실패\r\n        yield put({\r\n            type: UNFOLLOW_USER_FAILURE,\r\n            error: e\r\n        });\r\n    }\r\n}\r\n\r\nfunction* watchUnfollow() {\r\n    yield takeEvery(UNFOLLOW_USER_REQUEST, unfollow);\r\n}\r\n\r\nfunction loadFollowersAPI(userId, offset = 0, limit = 3) {\r\n    return axios.get(\r\n        `/user/${userId || 0}/followers?offset=${offset}&limit=${limit}`,\r\n        {\r\n            withCredentials: true\r\n        }\r\n    );\r\n}\r\n\r\nfunction* loadFollowers(action) {\r\n    try {\r\n        const result = yield call(loadFollowersAPI, action.data, action.offset);\r\n        yield put({\r\n            type: LOAD_FOLLOWERS_SUCCESS,\r\n            data: result.data\r\n        });\r\n    } catch (e) {\r\n        // loginAPI 실패\r\n        yield put({\r\n            type: LOAD_FOLLOWERS_FAILURE,\r\n            error: e\r\n        });\r\n    }\r\n}\r\n\r\nfunction* watchLoadFollowers() {\r\n    yield takeEvery(LOAD_FOLLOWERS_REQUEST, loadFollowers);\r\n}\r\n\r\nfunction loadFollowingsAPI(userId, offset = 0, limit = 3) {\r\n    return axios.get(\r\n        `/user/${userId || 0}/followings?offset=${offset}&limit=${limit}`,\r\n        {\r\n            withCredentials: true\r\n        }\r\n    );\r\n}\r\n\r\nfunction* loadFollowings(action) {\r\n    try {\r\n        const result = yield call(\r\n            loadFollowingsAPI,\r\n            action.data,\r\n            action.offset\r\n        );\r\n        yield put({\r\n            type: LOAD_FOLLOWINGS_SUCCESS,\r\n            data: result.data\r\n        });\r\n    } catch (e) {\r\n        // loginAPI 실패\r\n        yield put({\r\n            type: LOAD_FOLLOWINGS_FAILURE,\r\n            error: e\r\n        });\r\n    }\r\n}\r\n\r\nfunction* watchLoadFollowings() {\r\n    yield takeEvery(LOAD_FOLLOWINGS_REQUEST, loadFollowings);\r\n}\r\n\r\nfunction removeFollowerAPI(userId) {\r\n    return axios.delete(`/user/${userId}/follower`, {\r\n        withCredentials: true\r\n    });\r\n}\r\n\r\nfunction* removeFollower(action) {\r\n    try {\r\n        const result = yield call(removeFollowerAPI, action.data);\r\n        yield put({\r\n            type: REMOVE_FOLLOWER_SUCCESS,\r\n            data: result.data\r\n        });\r\n    } catch (e) {\r\n        yield put({\r\n            type: REMOVE_FOLLOWER_FAILURE,\r\n            error: e.response && e.response.data\r\n        });\r\n    }\r\n}\r\n\r\nfunction* watchRemoveFollower() {\r\n    yield takeEvery(REMOVE_FOLLOWER_REQUEST, removeFollower);\r\n}\r\n\r\nfunction editNicknameAPI(nickname) {\r\n    return axios.patch(\r\n        `/user/nickname`,\r\n        { nickname },\r\n        {\r\n            withCredentials: true\r\n        }\r\n    );\r\n}\r\n\r\nfunction* editNickname(action) {\r\n    try {\r\n        const result = yield call(editNicknameAPI, action.data);\r\n        yield put({\r\n            type: EDIT_NICKNAME_SUCCESS,\r\n            data: result.data\r\n        });\r\n    } catch (e) {\r\n        console.error(e);\r\n        yield put({\r\n            type: EDIT_NICKNAME_FAILURE,\r\n            error: e\r\n        });\r\n    }\r\n}\r\n\r\nfunction* watchEditNickname() {\r\n    yield takeEvery(EDIT_NICKNAME_REQUEST, editNickname);\r\n}\r\n\r\nexport default function* userSaga() {\r\n    yield all([\r\n        fork(watchLogin),\r\n        fork(watchSignUp),\r\n        fork(watchLogOut),\r\n        fork(watchLoadUser),\r\n        fork(watchFollow),\r\n        fork(watchUnfollow),\r\n        fork(watchLoadFollowers),\r\n        fork(watchLoadFollowings),\r\n        fork(watchRemoveFollower),\r\n        fork(watchEditNickname)\r\n    ]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}