{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar __jsx = React.createElement;\nimport React, { useCallback, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { LOAD_HASHTAG_POSTS_REQUEST } from \"../reducers/post\";\nimport PostCard from \"../containers/PostCard\";\n\nvar Hashtag = function Hashtag(_ref) {\n  var tag = _ref.tag;\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      mainPosts = _useSelector.mainPosts,\n      hasMorePost = _useSelector.hasMorePost;\n\n  console.log(mainPosts);\n  var onScroll = useCallback(function () {\n    if (window.scrollY + document.documentElement.clientHeight > document.documentElement.scrollHeight - 300) {\n      if (hasMorePost) {\n        dispatch({\n          type: LOAD_HASHTAG_POSTS_REQUEST,\n          lastId: mainPosts[mainPosts.length - 1] && mainPosts[mainPosts.length - 1].id,\n          data: tag\n        });\n      }\n    }\n  }, [hasMorePost, mainPosts.length]);\n  useEffect(function () {\n    window.addEventListener(\"scroll\", onScroll);\n    return function () {\n      window.removeEventListener(\"scroll\", onScroll);\n    };\n  }, [mainPosts.length]);\n  return __jsx(\"div\", null, mainPosts.map(function (c) {\n    return __jsx(PostCard, {\n      key: c.id,\n      post: c\n    });\n  }));\n};\n\nHashtag.getInitialProps = function _callee(context) {\n  var tag;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          tag = context.query.tag;\n          console.log(\"hashtag getInitialProps\", tag);\n          context.store.dispatch({\n            type: LOAD_HASHTAG_POSTS_REQUEST,\n            data: tag\n          });\n          return _context.abrupt(\"return\", {\n            tag: tag\n          });\n\n        case 4:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default Hashtag;","map":{"version":3,"sources":["D:/project/react-nodebird/front/pages/hashtag.js"],"names":["React","useCallback","useEffect","useDispatch","useSelector","LOAD_HASHTAG_POSTS_REQUEST","PostCard","Hashtag","tag","dispatch","state","post","mainPosts","hasMorePost","console","log","onScroll","window","scrollY","document","documentElement","clientHeight","scrollHeight","type","lastId","length","id","data","addEventListener","removeEventListener","map","c","getInitialProps","context","query","store"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,SAA7B,QAA8C,OAA9C;AAEA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,0BAAT,QAA2C,kBAA3C;AACA,OAAOC,QAAP,MAAqB,wBAArB;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,OAAa;AAAA,MAAVC,GAAU,QAAVA,GAAU;AACzB,MAAMC,QAAQ,GAAGN,WAAW,EAA5B;;AADyB,qBAGUC,WAAW,CAAC,UAAAM,KAAK;AAAA,WAAIA,KAAK,CAACC,IAAV;AAAA,GAAN,CAHrB;AAAA,MAGjBC,SAHiB,gBAGjBA,SAHiB;AAAA,MAGNC,WAHM,gBAGNA,WAHM;;AAIzBC,EAAAA,OAAO,CAACC,GAAR,CAAYH,SAAZ;AACA,MAAMI,QAAQ,GAAGf,WAAW,CAAC,YAAM;AAC/B,QACIgB,MAAM,CAACC,OAAP,GAAiBC,QAAQ,CAACC,eAAT,CAAyBC,YAA1C,GACAF,QAAQ,CAACC,eAAT,CAAyBE,YAAzB,GAAwC,GAF5C,EAGE;AACE,UAAIT,WAAJ,EAAiB;AACbJ,QAAAA,QAAQ,CAAC;AACLc,UAAAA,IAAI,EAAElB,0BADD;AAELmB,UAAAA,MAAM,EACFZ,SAAS,CAACA,SAAS,CAACa,MAAV,GAAmB,CAApB,CAAT,IACAb,SAAS,CAACA,SAAS,CAACa,MAAV,GAAmB,CAApB,CAAT,CAAgCC,EAJ/B;AAKLC,UAAAA,IAAI,EAAEnB;AALD,SAAD,CAAR;AAOH;AACJ;AACJ,GAf2B,EAezB,CAACK,WAAD,EAAcD,SAAS,CAACa,MAAxB,CAfyB,CAA5B;AAiBAvB,EAAAA,SAAS,CAAC,YAAM;AACZe,IAAAA,MAAM,CAACW,gBAAP,CAAwB,QAAxB,EAAkCZ,QAAlC;AACA,WAAO,YAAM;AACTC,MAAAA,MAAM,CAACY,mBAAP,CAA2B,QAA3B,EAAqCb,QAArC;AACH,KAFD;AAGH,GALQ,EAKN,CAACJ,SAAS,CAACa,MAAX,CALM,CAAT;AAOA,SACI,mBACKb,SAAS,CAACkB,GAAV,CAAc,UAAAC,CAAC;AAAA,WACZ,MAAC,QAAD;AAAU,MAAA,GAAG,EAAEA,CAAC,CAACL,EAAjB;AAAqB,MAAA,IAAI,EAAEK;AAA3B,MADY;AAAA,GAAf,CADL,CADJ;AAOH,CApCD;;AA0CAxB,OAAO,CAACyB,eAAR,GAA0B,iBAAMC,OAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAChBzB,UAAAA,GADgB,GACVyB,OAAO,CAACC,KAAR,CAAc1B,GADJ;AAEtBM,UAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCP,GAAvC;AACAyB,UAAAA,OAAO,CAACE,KAAR,CAAc1B,QAAd,CAAuB;AACnBc,YAAAA,IAAI,EAAElB,0BADa;AAEnBsB,YAAAA,IAAI,EAAEnB;AAFa,WAAvB;AAHsB,2CAOf;AAAEA,YAAAA,GAAG,EAAHA;AAAF,WAPe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA1B;;AAUA,eAAeD,OAAf","sourcesContent":["import React, { useCallback, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { LOAD_HASHTAG_POSTS_REQUEST } from \"../reducers/post\";\r\nimport PostCard from \"../containers/PostCard\";\r\n\r\nconst Hashtag = ({ tag }) => {\r\n    const dispatch = useDispatch();\r\n\r\n    const { mainPosts, hasMorePost } = useSelector(state => state.post);\r\n    console.log(mainPosts);\r\n    const onScroll = useCallback(() => {\r\n        if (\r\n            window.scrollY + document.documentElement.clientHeight >\r\n            document.documentElement.scrollHeight - 300\r\n        ) {\r\n            if (hasMorePost) {\r\n                dispatch({\r\n                    type: LOAD_HASHTAG_POSTS_REQUEST,\r\n                    lastId:\r\n                        mainPosts[mainPosts.length - 1] &&\r\n                        mainPosts[mainPosts.length - 1].id,\r\n                    data: tag\r\n                });\r\n            }\r\n        }\r\n    }, [hasMorePost, mainPosts.length]);\r\n\r\n    useEffect(() => {\r\n        window.addEventListener(\"scroll\", onScroll);\r\n        return () => {\r\n            window.removeEventListener(\"scroll\", onScroll);\r\n        };\r\n    }, [mainPosts.length]);\r\n\r\n    return (\r\n        <div>\r\n            {mainPosts.map(c => (\r\n                <PostCard key={c.id} post={c} />\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nHashtag.propTypes = {\r\n    tag: PropTypes.string.isRequired\r\n};\r\n\r\nHashtag.getInitialProps = async context => {\r\n    const tag = context.query.tag;\r\n    console.log(\"hashtag getInitialProps\", tag);\r\n    context.store.dispatch({\r\n        type: LOAD_HASHTAG_POSTS_REQUEST,\r\n        data: tag\r\n    });\r\n    return { tag };\r\n};\r\n\r\nexport default Hashtag;\r\n"]},"metadata":{},"sourceType":"module"}