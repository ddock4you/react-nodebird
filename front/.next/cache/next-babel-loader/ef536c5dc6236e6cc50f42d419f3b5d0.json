{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from \"react\";\nimport { Avatar, Card } from \"antd\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { LOAD_USER_REQUEST } from \"../reducers/user\";\nimport { LOAD_USER_POSTS_REQUEST } from \"../reducers/post\";\nimport PostCard from \"../containers/PostCard\";\n\nvar User = function User() {\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      mainPosts = _useSelector.mainPosts;\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.user;\n  }),\n      me = _useSelector2.me,\n      userInfo = _useSelector2.userInfo;\n\n  console.log(me, userInfo);\n  return __jsx(\"div\", null, userInfo ? __jsx(Card, {\n    actions: [__jsx(\"div\", {\n      key: \"twit\"\n    }, \"\\uC9F9\\uC9F9\", __jsx(\"br\", null), userInfo.Posts.length), __jsx(\"div\", {\n      key: \"following\"\n    }, \"\\uD314\\uB85C\\uC789\", __jsx(\"br\", null), userInfo.Followings.length), __jsx(\"div\", {\n      key: \"follower\"\n    }, \"\\uD314\\uB85C\\uC6B0\", __jsx(\"br\", null), userInfo.Followers.length)]\n  }, __jsx(Card.Meta, {\n    avatar: __jsx(Avatar, null, userInfo.nickname[0]),\n    title: userInfo.nickname\n  })) : null, mainPosts.map(function (c) {\n    return __jsx(PostCard, {\n      key: +c.id,\n      post: c\n    });\n  }));\n};\n\nUser.getInitialProps = function _callee(context) {\n  var id;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          console.log(\"hashag getInitialProps\", context.query.id); // props로도 전달 가능!\n\n          id = _parseInt(context.query.id, 10);\n          context.store.dispatch({\n            type: LOAD_USER_REQUEST,\n            data: id\n          });\n          context.store.dispatch({\n            type: LOAD_USER_POSTS_REQUEST,\n            data: id\n          });\n          return _context.abrupt(\"return\", {\n            id: id\n          });\n\n        case 5:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default User;","map":{"version":3,"sources":["D:/project/react-nodebird/front/pages/user.js"],"names":["React","useEffect","Avatar","Card","useDispatch","useSelector","LOAD_USER_REQUEST","LOAD_USER_POSTS_REQUEST","PostCard","User","state","post","mainPosts","user","me","userInfo","console","log","Posts","length","Followings","Followers","nickname","map","c","id","getInitialProps","context","query","store","dispatch","type","data"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,SAASC,MAAT,EAAiBC,IAAjB,QAA6B,MAA7B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,iBAAT,QAAkC,kBAAlC;AACA,SAASC,uBAAT,QAAwC,kBAAxC;AACA,OAAOC,QAAP,MAAqB,wBAArB;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM;AAAA,qBACOJ,WAAW,CAAC,UAAAK,KAAK;AAAA,WAAIA,KAAK,CAACC,IAAV;AAAA,GAAN,CADlB;AAAA,MACPC,SADO,gBACPA,SADO;;AAAA,sBAEUP,WAAW,CAAC,UAAAK,KAAK;AAAA,WAAIA,KAAK,CAACG,IAAV;AAAA,GAAN,CAFrB;AAAA,MAEPC,EAFO,iBAEPA,EAFO;AAAA,MAEHC,QAFG,iBAEHA,QAFG;;AAIfC,EAAAA,OAAO,CAACC,GAAR,CAAYH,EAAZ,EAAgBC,QAAhB;AACA,SACI,mBACKA,QAAQ,GACL,MAAC,IAAD;AACI,IAAA,OAAO,EAAE,CACL;AAAK,MAAA,GAAG,EAAC;AAAT,uBAEI,iBAFJ,EAGKA,QAAQ,CAACG,KAAT,CAAeC,MAHpB,CADK,EAML;AAAK,MAAA,GAAG,EAAC;AAAT,6BAEI,iBAFJ,EAGKJ,QAAQ,CAACK,UAAT,CAAoBD,MAHzB,CANK,EAWL;AAAK,MAAA,GAAG,EAAC;AAAT,6BAEI,iBAFJ,EAGKJ,QAAQ,CAACM,SAAT,CAAmBF,MAHxB,CAXK;AADb,KAmBI,MAAC,IAAD,CAAM,IAAN;AACI,IAAA,MAAM,EAAE,MAAC,MAAD,QAASJ,QAAQ,CAACO,QAAT,CAAkB,CAAlB,CAAT,CADZ;AAEI,IAAA,KAAK,EAAEP,QAAQ,CAACO;AAFpB,IAnBJ,CADK,GAyBL,IA1BR,EA2BKV,SAAS,CAACW,GAAV,CAAc,UAAAC,CAAC;AAAA,WACZ,MAAC,QAAD;AAAU,MAAA,GAAG,EAAE,CAACA,CAAC,CAACC,EAAlB;AAAsB,MAAA,IAAI,EAAED;AAA5B,MADY;AAAA,GAAf,CA3BL,CADJ;AAiCH,CAtCD;;AA4CAf,IAAI,CAACiB,eAAL,GAAuB,iBAAMC,OAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AACnBX,UAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAAsCU,OAAO,CAACC,KAAR,CAAcH,EAApD,EADmB,CAEnB;;AACMA,UAAAA,EAHa,GAGR,UAASE,OAAO,CAACC,KAAR,CAAcH,EAAvB,EAA2B,EAA3B,CAHQ;AAInBE,UAAAA,OAAO,CAACE,KAAR,CAAcC,QAAd,CAAuB;AACnBC,YAAAA,IAAI,EAAEzB,iBADa;AAEnB0B,YAAAA,IAAI,EAAEP;AAFa,WAAvB;AAIAE,UAAAA,OAAO,CAACE,KAAR,CAAcC,QAAd,CAAuB;AACnBC,YAAAA,IAAI,EAAExB,uBADa;AAEnByB,YAAAA,IAAI,EAAEP;AAFa,WAAvB;AARmB,2CAYZ;AAAEA,YAAAA,EAAE,EAAFA;AAAF,WAZY;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAvB;;AAeA,eAAehB,IAAf","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Avatar, Card } from \"antd\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { LOAD_USER_REQUEST } from \"../reducers/user\";\r\nimport { LOAD_USER_POSTS_REQUEST } from \"../reducers/post\";\r\nimport PostCard from \"../containers/PostCard\";\r\n\r\nconst User = () => {\r\n    const { mainPosts } = useSelector(state => state.post);\r\n    const { me, userInfo } = useSelector(state => state.user);\r\n\r\n    console.log(me, userInfo);\r\n    return (\r\n        <div>\r\n            {userInfo ? (\r\n                <Card\r\n                    actions={[\r\n                        <div key=\"twit\">\r\n                            짹짹\r\n                            <br />\r\n                            {userInfo.Posts.length}\r\n                        </div>,\r\n                        <div key=\"following\">\r\n                            팔로잉\r\n                            <br />\r\n                            {userInfo.Followings.length}\r\n                        </div>,\r\n                        <div key=\"follower\">\r\n                            팔로우\r\n                            <br />\r\n                            {userInfo.Followers.length}\r\n                        </div>\r\n                    ]}\r\n                >\r\n                    <Card.Meta\r\n                        avatar={<Avatar>{userInfo.nickname[0]}</Avatar>}\r\n                        title={userInfo.nickname}\r\n                    />\r\n                </Card>\r\n            ) : null}\r\n            {mainPosts.map(c => (\r\n                <PostCard key={+c.id} post={c} />\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nUser.propTypes = {\r\n    id: PropTypes.number.isRequired\r\n};\r\n\r\nUser.getInitialProps = async context => {\r\n    console.log(\"hashag getInitialProps\", context.query.id);\r\n    // props로도 전달 가능!\r\n    const id = parseInt(context.query.id, 10);\r\n    context.store.dispatch({\r\n        type: LOAD_USER_REQUEST,\r\n        data: id\r\n    });\r\n    context.store.dispatch({\r\n        type: LOAD_USER_POSTS_REQUEST,\r\n        data: id\r\n    });\r\n    return { id };\r\n};\r\n\r\nexport default User;\r\n"]},"metadata":{},"sourceType":"module"}