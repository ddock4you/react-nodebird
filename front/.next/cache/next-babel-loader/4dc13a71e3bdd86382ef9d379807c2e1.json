{"ast":null,"code":"import produce from \"immer\"; // store, 초기값\n\nexport var initialState = {\n  isLoggedIn: false,\n  // 로그인 여부\n  isLoggingOut: false,\n  // 로그아웃 시도중\n  logInErrorReason: \"\",\n  // 로그인 실패 사유\n  isSignedUp: false,\n  // 회원가입 성공\n  isSigningUp: false,\n  // 회원가입 시도중\n  signUpErrorReason: \"\",\n  // 회원가입 실패 사유\n  me: null,\n  // 내 정보\n  followingList: [],\n  // 팔로잉 리스트\n  followerList: [],\n  // 팔로워 리스트\n  userInfo: null,\n  // 남의 정보\n  isEditingNickname: false,\n  // 이름 변경 중\n  editNicknameErrorReason: \"\",\n  // 이름 변경 실패 사유\n  hasMoreFollower: false,\n  hasMoreFollowing: false\n}; //\n\nexport var SIGN_UP_REQUEST = \"SIGN_UP_REQUEST\";\nexport var SIGN_UP_SUCCESS = \"SIGN_UP_SUCCESS\";\nexport var SIGN_UP_FAILURE = \"SIGN_UP_FAILURE\";\nexport var LOG_IN_REQUEST = \"LOG_IN_REQUEST\";\nexport var LOG_IN_SUCCESS = \"LOG_IN_SUCCESS\";\nexport var LOG_IN_FAILURE = \"LOG_IN_FAILURE\";\nexport var LOG_USER_REQUEST = \"LOG_USER_REQUEST\";\nexport var LOG_USER_SUCCESS = \"LOG_USER_SUCCESS\";\nexport var LOG_USER_FAILURE = \"LOG_USER_FAILURE\";\nexport var LOG_OUT_REQUEST = \"LOG_OUT_REQUEST\";\nexport var LOG_OUT_SUCCESS = \"LOG_OUT_SUCCESS\";\nexport var LOG_OUT_FAILURE = \"LOG_OUT_FAILURE\";\nexport var LOAD_USER_REQUEST = \"LOAD_USER_REQUEST\";\nexport var LOAD_USER_SUCCESS = \"LOAD_USER_SUCCESS\";\nexport var LOAD_USER_FAILURE = \"LOAD_USER_FAILURE\";\nexport var LOAD_FOLLOWERS_REQUEST = \"LOAD_FOLLOWERS_REQUEST\";\nexport var LOAD_FOLLOWERS_SUCCESS = \"LOAD_FOLLOWERS_SUCCESS\";\nexport var LOAD_FOLLOWERS_FAILURE = \"LOAD_FOLLOWERS_FAILURE\";\nexport var LOAD_FOLLOWINGS_REQUEST = \"LOAD_FOLLOWINGS_REQUEST\";\nexport var LOAD_FOLLOWINGS_SUCCESS = \"LOAD_FOLLOWINGS_SUCCESS\";\nexport var LOAD_FOLLOWINGS_FAILURE = \"LOAD_FOLLOWINGS_FAILURE\";\nexport var FOLLOW_USER_REQUEST = \"FOLLOW_USER_REQUEST\";\nexport var FOLLOW_USER_SUCCESS = \"FOLLOW_USER_SUCCESS\";\nexport var FOLLOW_USER_FAILURE = \"FOLLOW_USER_FAILURE\";\nexport var UNFOLLOW_USER_REQUEST = \"UNFOLLOW_USER_REQUEST\";\nexport var UNFOLLOW_USER_SUCCESS = \"UNFOLLOW_USER_SUCCESS\";\nexport var UNFOLLOW_USER_FAILURE = \"UNFOLLOW_USER_FAILURE\";\nexport var REMOVE_FOLLOWER_REQUEST = \"REMOVE_FOLLOWER_REQUEST\";\nexport var REMOVE_FOLLOWER_SUCCESS = \"REMOVE_FOLLOWER_SUCCESS\";\nexport var REMOVE_FOLLOWER_FAILURE = \"REMOVE_FOLLOWER_FAILURE\";\nexport var EDIT_NICKNAME_REQUEST = \"EDIT_NICKNAME_REQUEST\";\nexport var EDIT_NICKNAME_SUCCESS = \"EDIT_NICKNAME_SUCCESS\";\nexport var EDIT_NICKNAME_FAILURE = \"EDIT_NICKNAME_FAILURE\";\nexport var ADD_POST_TO_ME = \"ADD_POST_TO_ME\";\nexport var REMOVE_POST_TO_ME = \"REMOVE_POST_TO_ME\"; // 실제 액션\n\nexport var signUpRequestAction = function signUpRequestAction(data) {\n  return {\n    type: SIGN_UP_REQUEST,\n    data: data\n  };\n}; // 리듀서 -> Action의 결과로 state를 어떻게 바꿀지 정의\n\nexport default (function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  return produce(state, function (draft) {\n    switch (action.type) {\n      case LOG_IN_REQUEST:\n        {\n          draft.isLoggedIn = true;\n          draft.logInErrorReason = \"\";\n          break; // return {\n          //     ...state,\n          //     isLoggedIn: true,\n          //     logInErrorReason: \"\"\n          // };\n        }\n\n      case LOG_IN_SUCCESS:\n        {\n          draft.isLoggedIn = false;\n          draft.me = action.data;\n          draft.isLoading = false;\n          break; // return {\n          //     ...state,\n          //     isLoggedIn: false,\n          //     me: action.data,\n          //     isLoading: false\n          // };\n        }\n\n      case LOG_IN_FAILURE:\n        {\n          draft.isLoggedIn = false;\n          draft.logInErrorReason = action.error;\n          draft.me = null;\n          break; // return {\n          //     ...state,\n          //     isLoggedIn: false,\n          //     logInErrorReason: action.error,\n          //     me: null\n          // };\n        }\n\n      case LOG_OUT_REQUEST:\n        {\n          draft.isLoggingOut = true;\n          break; // return {\n          //     ...state,\n          //     isLoggingOut: true\n          // };\n        }\n\n      case LOG_OUT_SUCCESS:\n        {\n          draft.isLoggingOut = false;\n          draft.me = null;\n          break; // return {\n          //     ...state,\n          //     isLoggingOut: false,\n          //     me: null\n          // };\n        }\n\n      case SIGN_UP_REQUEST:\n        {\n          draft.isSigningUp = true;\n          draft.isSignUp = false;\n          draft.signUpErrorReason = \"\";\n          break; // return {\n          //     ...state,\n          //     isSigningUp: true,\n          //     isSignedUp: false,\n          //     signUpErrorReason: \"\"\n          // };\n        }\n\n      case SIGN_UP_SUCCESS:\n        {\n          draft.isSigninUp = false;\n          draft.isSigndUp = true;\n          break; // return {\n          //     ...state,\n          //     isSigningUp: false,\n          //     isSignedUp: true\n          // };\n        }\n\n      case SIGN_UP_FAILURE:\n        {\n          draft.isSigningUp = false;\n          draft.signUpErrorReason = action.error;\n          break; // return {\n          //     ...state,\n          //     isSigningUp: false,\n          //     signUpErrorReason: action.error\n          // };\n        }\n\n      case LOAD_USER_REQUEST:\n        {\n          break; // return {\n          //     ...state\n          // };\n        }\n\n      case LOAD_USER_SUCCESS:\n        {\n          if (action.me) {\n            draft.me = action.data;\n            break; // return {\n            //     ...state,\n            //     me: action.data\n            // };\n          }\n\n          draft.userinfo = action.data;\n          break; // return {\n          //     ...state,\n          //     userInfo: action.data\n          // };\n        }\n\n      case LOAD_USER_FAILURE:\n        {\n          break; // return {\n          //     ...state\n          // };\n        }\n\n      case FOLLOW_USER_REQUEST:\n        {\n          break; // return {\n          //     ...state\n          // };\n        }\n\n      case FOLLOW_USER_SUCCESS:\n        {\n          draft.me.Followings.unshift({\n            id: action.data\n          });\n          break; // return {\n          //     ...state,\n          //     me: {\n          //         ...state.me,\n          //         Followings: [\n          //             { id: action.data },\n          //             ...state.me.Followings\n          //         ]\n          //     }\n          // };\n        }\n\n      case FOLLOW_USER_FAILURE:\n        {\n          break; // return {\n          //     ...state\n          // };\n        }\n\n      case UNFOLLOW_USER_REQUEST:\n        {\n          break; // return {\n          //     ...state\n          // };\n        }\n\n      case UNFOLLOW_USER_SUCCESS:\n        {\n          var index = draft.me.Followings.findIndex(function (v) {\n            return v.id === action.data;\n          });\n          draft.me.Followings.splice(index, 1);\n          var index2 = draft.me.Followings.findIndex(function (v) {\n            return v.id === action.data;\n          });\n          draft.me.Followings.splice(index2, 1);\n          break; // return {\n          //     ...state,\n          //     me: {\n          //         ...state.me,\n          //         Followings: state.me.Followings.filter(\n          //             v => v.id !== action.data\n          //         )\n          //     },\n          //     followingList: state.followingList.filter(\n          //         v => v.id !== action.data\n          //     )\n          // };\n        }\n\n      case UNFOLLOW_USER_FAILURE:\n        {\n          break; // return {\n          //     ...state\n          // };\n        }\n\n      case ADD_POST_TO_ME:\n        {\n          draft.me.Posts.unshift({\n            id: action.data\n          });\n          break; // return {\n          //     ...state,\n          //     me: {\n          //         ...state.me,\n          //         Posts: [{ id: action.data }, ...state.me.Posts]\n          //     }\n          // };\n        }\n\n      case REMOVE_POST_TO_ME:\n        {\n          draft.me.Posts.unshift({\n            id: action.data\n          });\n          break; // return {\n          //     ...state,\n          //     me: {\n          //         ...state.me,\n          //         Posts: state.me.Posts.filter(v => v.id !== action.data)\n          //     }\n          // };\n        }\n\n      case LOAD_FOLLOWERS_REQUEST:\n        {\n          draft.followerList = !action.offset ? [] : draft.followerList;\n          draft.hasMoreFollower = action.offset ? state.hasMoreFollower : true;\n          break; // return {\n          //     ...state,\n          //     // 처음 데이터를 가져올 때는 더보기 버튼을 true로\n          //     hasMoreFollower: action.offset\n          //         ? state.hasMoreFollower\n          //         : true\n          // };\n        }\n\n      case LOAD_FOLLOWERS_SUCCESS:\n        {\n          action.data.forEach(function (d) {\n            draft.followerList.push(d);\n          });\n          draft.hasMoreFollower = action.data.length === 3;\n          break; // return {\n          //     ...state,\n          //     followerList: state.followerList.concat(action.data),\n          //     hasMoreFollower: action.data.length === 3\n          // };\n        }\n\n      case LOAD_FOLLOWERS_FAILURE:\n        {\n          break; // return {\n          //     ...state\n          // };\n        }\n\n      case LOAD_FOLLOWINGS_REQUEST:\n        {\n          draft.followingList = !action.offset ? [] : draft.followingList;\n          draft.hasMoreFollowing = action.offset ? draft.hasMoreFollowing : true;\n          break; // return {\n          //     ...state,\n          //     hasMoreFollowing: action.offset\n          //         ? state.hasMoreFollowing\n          //         : true\n          // };\n        }\n\n      case LOAD_FOLLOWINGS_SUCCESS:\n        {\n          action.data.forEach(function (d) {\n            draft.followingList.push(d);\n          });\n          draft.hasMoreFollowing = action.data.length === 3;\n          break; // return {\n          //     ...state,\n          //     followingList: state.followingList.concat(action.data),\n          //     hasMoreFollowing: action.data.length === 3\n          // };\n        }\n\n      case LOAD_FOLLOWINGS_FAILURE:\n        {\n          break; // return {\n          //     ...state\n          // };\n        }\n\n      case REMOVE_FOLLOWER_REQUEST:\n        {\n          break; // return {\n          //     ...state\n          // };\n        }\n\n      case REMOVE_FOLLOWER_SUCCESS:\n        {\n          var _index = draft.me.Followers.findIndex(function (v) {\n            return v.id === action.data;\n          });\n\n          draft.me.Followers.splice(_index, 1);\n\n          var _index2 = draft.me.FollowerList.findIndex(function (v) {\n            return v.id === action.data;\n          });\n\n          draft.me.FollowerList.splice(_index2, 1);\n          break; // return {\n          //     ...state,\n          //     me: {\n          //         ...state.me,\n          //         Followers: state.me.Followers.filter(\n          //             v => v.id !== action.data\n          //         )\n          //     },\n          //     followerList: state.followerList.filter(\n          //         v => v.id !== action.data\n          //     )\n          // };\n        }\n\n      case REMOVE_FOLLOWER_FAILURE:\n        {\n          break; // return {\n          //     ...state\n          // };\n        }\n\n      case EDIT_NICKNAME_REQUEST:\n        {\n          draft.isEditingNickname = true;\n          draft.editNicknameErrorReason = \"\";\n          break; // return {\n          //     ...state,\n          //     isEditingNickname: true,\n          //     editNicknameErrorReason: \"\"\n          // };\n        }\n\n      case EDIT_NICKNAME_SUCCESS:\n        {\n          draft.isEditingNickname = false;\n          draft.me.nickname = action.data;\n          break; // return {\n          //     ...state,\n          //     isEditingNickname: false,\n          //     me: {\n          //         ...state.me,\n          //         nickname: action.data\n          //     }\n          // };\n        }\n\n      case EDIT_NICKNAME_FAILURE:\n        {\n          draft.isEditingNickname = false;\n          draft.editNicknameErrorReason = action.error;\n          break; // return {\n          //     ...state,\n          //     isEditingNickname: false,\n          //     editNicknameErrorReason: action.error\n          // };\n        }\n\n      default:\n        {\n          break; // return {\n          //     ...state\n          // };\n        }\n    }\n  });\n}); // export default reducer;","map":null,"metadata":{},"sourceType":"module"}