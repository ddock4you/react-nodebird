{"ast":null,"code":"import produce from \"immer\"; // store, 초기값\n\nexport var initialState = {\n  isLoggedIn: false,\n  // 로그인 여부\n  isLoggingOut: false,\n  // 로그아웃 시도중\n  logInErrorReason: \"\",\n  // 로그인 실패 사유\n  isSignedUp: false,\n  // 회원가입 성공\n  isSigningUp: false,\n  // 회원가입 시도중\n  signUpErrorReason: \"\",\n  // 회원가입 실패 사유\n  me: null,\n  // 내 정보\n  followingList: [],\n  // 팔로잉 리스트\n  followerList: [],\n  // 팔로워 리스트\n  userInfo: null,\n  // 남의 정보\n  isEditingNickname: false,\n  // 이름 변경 중\n  editNicknameErrorReason: \"\",\n  // 이름 변경 실패 사유\n  hasMoreFollower: false,\n  hasMoreFollowing: false\n}; //\n\nexport var SIGN_UP_REQUEST = \"SIGN_UP_REQUEST\";\nexport var SIGN_UP_SUCCESS = \"SIGN_UP_SUCCESS\";\nexport var SIGN_UP_FAILURE = \"SIGN_UP_FAILURE\";\nexport var LOG_IN_REQUEST = \"LOG_IN_REQUEST\";\nexport var LOG_IN_SUCCESS = \"LOG_IN_SUCCESS\";\nexport var LOG_IN_FAILURE = \"LOG_IN_FAILURE\";\nexport var LOG_USER_REQUEST = \"LOG_USER_REQUEST\";\nexport var LOG_USER_SUCCESS = \"LOG_USER_SUCCESS\";\nexport var LOG_USER_FAILURE = \"LOG_USER_FAILURE\";\nexport var LOG_OUT_REQUEST = \"LOG_OUT_REQUEST\";\nexport var LOG_OUT_SUCCESS = \"LOG_OUT_SUCCESS\";\nexport var LOG_OUT_FAILURE = \"LOG_OUT_FAILURE\";\nexport var LOAD_USER_REQUEST = \"LOAD_USER_REQUEST\";\nexport var LOAD_USER_SUCCESS = \"LOAD_USER_SUCCESS\";\nexport var LOAD_USER_FAILURE = \"LOAD_USER_FAILURE\";\nexport var LOAD_FOLLOWERS_REQUEST = \"LOAD_FOLLOWERS_REQUEST\";\nexport var LOAD_FOLLOWERS_SUCCESS = \"LOAD_FOLLOWERS_SUCCESS\";\nexport var LOAD_FOLLOWERS_FAILURE = \"LOAD_FOLLOWERS_FAILURE\";\nexport var LOAD_FOLLOWINGS_REQUEST = \"LOAD_FOLLOWINGS_REQUEST\";\nexport var LOAD_FOLLOWINGS_SUCCESS = \"LOAD_FOLLOWINGS_SUCCESS\";\nexport var LOAD_FOLLOWINGS_FAILURE = \"LOAD_FOLLOWINGS_FAILURE\";\nexport var FOLLOW_USER_REQUEST = \"FOLLOW_USER_REQUEST\";\nexport var FOLLOW_USER_SUCCESS = \"FOLLOW_USER_SUCCESS\";\nexport var FOLLOW_USER_FAILURE = \"FOLLOW_USER_FAILURE\";\nexport var UNFOLLOW_USER_REQUEST = \"UNFOLLOW_USER_REQUEST\";\nexport var UNFOLLOW_USER_SUCCESS = \"UNFOLLOW_USER_SUCCESS\";\nexport var UNFOLLOW_USER_FAILURE = \"UNFOLLOW_USER_FAILURE\";\nexport var REMOVE_FOLLOWER_REQUEST = \"REMOVE_FOLLOWER_REQUEST\";\nexport var REMOVE_FOLLOWER_SUCCESS = \"REMOVE_FOLLOWER_SUCCESS\";\nexport var REMOVE_FOLLOWER_FAILURE = \"REMOVE_FOLLOWER_FAILURE\";\nexport var EDIT_NICKNAME_REQUEST = \"EDIT_NICKNAME_REQUEST\";\nexport var EDIT_NICKNAME_SUCCESS = \"EDIT_NICKNAME_SUCCESS\";\nexport var EDIT_NICKNAME_FAILURE = \"EDIT_NICKNAME_FAILURE\";\nexport var ADD_POST_TO_ME = \"ADD_POST_TO_ME\";\nexport var REMOVE_POST_TO_ME = \"REMOVE_POST_TO_ME\"; // 실제 액션\n\nexport var signUpRequestAction = function signUpRequestAction(data) {\n  return {\n    type: SIGN_UP_REQUEST,\n    data: data\n  };\n}; // 리듀서 -> Action의 결과로 state를 어떻게 바꿀지 정의\n\nexport default (function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  return produce(state, function (draft) {\n    switch (action.type) {\n      case LOG_IN_REQUEST:\n        {\n          draft.isLoggedIn = true;\n          draft.logInErrorReason = \"\";\n          break; // return {\n          //     ...state,\n          //     isLoggedIn: true,\n          //     logInErrorReason: \"\"\n          // };\n        }\n\n      case LOG_IN_SUCCESS:\n        {\n          draft.isLoggedIn = false;\n          draft.me = action.data;\n          draft.isLoading = false;\n          break; // return {\n          //     ...state,\n          //     isLoggedIn: false,\n          //     me: action.data,\n          //     isLoading: false\n          // };\n        }\n\n      case LOG_IN_FAILURE:\n        {\n          draft.isLoggedIn = false;\n          draft.logInErrorReason = action.error;\n          draft.me = null;\n          break; // return {\n          //     ...state,\n          //     isLoggedIn: false,\n          //     logInErrorReason: action.error,\n          //     me: null\n          // };\n        }\n\n      case LOG_OUT_REQUEST:\n        {\n          draft.isLoggingOut = true;\n          break; // return {\n          //     ...state,\n          //     isLoggingOut: true\n          // };\n        }\n\n      case LOG_OUT_SUCCESS:\n        {\n          draft.isLoggingOut = false;\n          draft.me = null;\n          break; // return {\n          //     ...state,\n          //     isLoggingOut: false,\n          //     me: null\n          // };\n        }\n\n      case SIGN_UP_REQUEST:\n        {\n          draft.isSigningUp = true;\n          draft.isSignUp = false;\n          draft.signUpErrorReason = \"\";\n          break; // return {\n          //     ...state,\n          //     isSigningUp: true,\n          //     isSignedUp: false,\n          //     signUpErrorReason: \"\"\n          // };\n        }\n\n      case SIGN_UP_SUCCESS:\n        {\n          draft.isSigninUp = false;\n          draft.isSigndUp = true;\n          break; // return {\n          //     ...state,\n          //     isSigningUp: false,\n          //     isSignedUp: true\n          // };\n        }\n\n      case SIGN_UP_FAILURE:\n        {\n          draft.isSigningUp = false;\n          draft.signUpErrorReason = action.error;\n          break; // return {\n          //     ...state,\n          //     isSigningUp: false,\n          //     signUpErrorReason: action.error\n          // };\n        }\n\n      case LOAD_USER_REQUEST:\n        {\n          break; // return {\n          //     ...state\n          // };\n        }\n\n      case LOAD_USER_SUCCESS:\n        {\n          if (action.me) {\n            draft.me = action.data;\n            break; // return {\n            //     ...state,\n            //     me: action.data\n            // };\n          }\n\n          draft.userinfo = action.data;\n          break; // return {\n          //     ...state,\n          //     userInfo: action.data\n          // };\n        }\n\n      case LOAD_USER_FAILURE:\n        {\n          break; // return {\n          //     ...state\n          // };\n        }\n\n      case FOLLOW_USER_REQUEST:\n        {\n          break; // return {\n          //     ...state\n          // };\n        }\n\n      case FOLLOW_USER_SUCCESS:\n        {\n          draft.me.Followings.unshift({\n            id: action.data\n          });\n          break; // return {\n          //     ...state,\n          //     me: {\n          //         ...state.me,\n          //         Followings: [\n          //             { id: action.data },\n          //             ...state.me.Followings\n          //         ]\n          //     }\n          // };\n        }\n\n      case FOLLOW_USER_FAILURE:\n        {\n          break; // return {\n          //     ...state\n          // };\n        }\n\n      case UNFOLLOW_USER_REQUEST:\n        {\n          break; // return {\n          //     ...state\n          // };\n        }\n\n      case UNFOLLOW_USER_SUCCESS:\n        {\n          var index = draft.me.Followings.findIndex(function (v) {\n            return v.id === action.data;\n          });\n          draft.me.Followings.splice(index, 1);\n          var index2 = draft.me.Followings.findIndex(function (v) {\n            return v.id === action.data;\n          });\n          draft.me.Followings.splice(index2, 1);\n          break; // return {\n          //     ...state,\n          //     me: {\n          //         ...state.me,\n          //         Followings: state.me.Followings.filter(\n          //             v => v.id !== action.data\n          //         )\n          //     },\n          //     followingList: state.followingList.filter(\n          //         v => v.id !== action.data\n          //     )\n          // };\n        }\n\n      case UNFOLLOW_USER_FAILURE:\n        {\n          break; // return {\n          //     ...state\n          // };\n        }\n\n      case ADD_POST_TO_ME:\n        {\n          draft.me.Posts.unshift({\n            id: action.data\n          });\n          break; // return {\n          //     ...state,\n          //     me: {\n          //         ...state.me,\n          //         Posts: [{ id: action.data }, ...state.me.Posts]\n          //     }\n          // };\n        }\n\n      case REMOVE_POST_TO_ME:\n        {\n          draft.me.Posts.unshift({\n            id: action.data\n          });\n          break; // return {\n          //     ...state,\n          //     me: {\n          //         ...state.me,\n          //         Posts: state.me.Posts.filter(v => v.id !== action.data)\n          //     }\n          // };\n        }\n\n      case LOAD_FOLLOWERS_REQUEST:\n        {\n          draft.followerList = !action.offset ? [] : draft.followerList;\n          draft.hasMoreFollower = action.offset ? state.hasMoreFollower : true;\n          break; // return {\n          //     ...state,\n          //     // 처음 데이터를 가져올 때는 더보기 버튼을 true로\n          //     hasMoreFollower: action.offset\n          //         ? state.hasMoreFollower\n          //         : true\n          // };\n        }\n\n      case LOAD_FOLLOWERS_SUCCESS:\n        {\n          action.data.forEach(function (d) {\n            draft.followerList.push(d);\n          });\n          draft.hasMoreFollower = action.data.length === 3;\n          break; // return {\n          //     ...state,\n          //     followerList: state.followerList.concat(action.data),\n          //     hasMoreFollower: action.data.length === 3\n          // };\n        }\n\n      case LOAD_FOLLOWERS_FAILURE:\n        {\n          break; // return {\n          //     ...state\n          // };\n        }\n\n      case LOAD_FOLLOWINGS_REQUEST:\n        {\n          draft.followingList = !action.offset ? [] : draft.followingList;\n          draft.hasMoreFollowing = action.offset ? draft.hasMoreFollowing : true;\n          break; // return {\n          //     ...state,\n          //     hasMoreFollowing: action.offset\n          //         ? state.hasMoreFollowing\n          //         : true\n          // };\n        }\n\n      case LOAD_FOLLOWINGS_SUCCESS:\n        {\n          action.data.forEach(function (d) {\n            draft.followingList.push(d);\n          });\n          draft.hasMoreFollowing = action.data.length === 3;\n          break; // return {\n          //     ...state,\n          //     followingList: state.followingList.concat(action.data),\n          //     hasMoreFollowing: action.data.length === 3\n          // };\n        }\n\n      case LOAD_FOLLOWINGS_FAILURE:\n        {\n          break; // return {\n          //     ...state\n          // };\n        }\n\n      case REMOVE_FOLLOWER_REQUEST:\n        {\n          break; // return {\n          //     ...state\n          // };\n        }\n\n      case REMOVE_FOLLOWER_SUCCESS:\n        {\n          var _index = draft.me.Followers.findIndex(function (v) {\n            return v.id === action.data;\n          });\n\n          draft.me.Followers.splice(_index, 1);\n\n          var _index2 = draft.me.FollowerList.findIndex(function (v) {\n            return v.id === action.data;\n          });\n\n          draft.me.FollowerList.splice(_index2, 1);\n          break; // return {\n          //     ...state,\n          //     me: {\n          //         ...state.me,\n          //         Followers: state.me.Followers.filter(\n          //             v => v.id !== action.data\n          //         )\n          //     },\n          //     followerList: state.followerList.filter(\n          //         v => v.id !== action.data\n          //     )\n          // };\n        }\n\n      case REMOVE_FOLLOWER_FAILURE:\n        {\n          break; // return {\n          //     ...state\n          // };\n        }\n\n      case EDIT_NICKNAME_REQUEST:\n        {\n          draft.isEditingNickname = true;\n          draft.editNicknameErrorReason = \"\";\n          break; // return {\n          //     ...state,\n          //     isEditingNickname: true,\n          //     editNicknameErrorReason: \"\"\n          // };\n        }\n\n      case EDIT_NICKNAME_SUCCESS:\n        {\n          draft.isEditingNickname = false;\n          draft.me.nickname = action.data;\n          break; // return {\n          //     ...state,\n          //     isEditingNickname: false,\n          //     me: {\n          //         ...state.me,\n          //         nickname: action.data\n          //     }\n          // };\n        }\n\n      case EDIT_NICKNAME_FAILURE:\n        {\n          draft.isEditingNickname = false;\n          draft.editNicknameErrorReason = action.error;\n          break; // return {\n          //     ...state,\n          //     isEditingNickname: false,\n          //     editNicknameErrorReason: action.error\n          // };\n        }\n\n      default:\n        {\n          break; // return {\n          //     ...state\n          // };\n        }\n    }\n  });\n}); // export default reducer;","map":{"version":3,"sources":["D:/project/react-nodebird/front/reducers/user.js"],"names":["produce","initialState","isLoggedIn","isLoggingOut","logInErrorReason","isSignedUp","isSigningUp","signUpErrorReason","me","followingList","followerList","userInfo","isEditingNickname","editNicknameErrorReason","hasMoreFollower","hasMoreFollowing","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOG_USER_REQUEST","LOG_USER_SUCCESS","LOG_USER_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","LOAD_USER_REQUEST","LOAD_USER_SUCCESS","LOAD_USER_FAILURE","LOAD_FOLLOWERS_REQUEST","LOAD_FOLLOWERS_SUCCESS","LOAD_FOLLOWERS_FAILURE","LOAD_FOLLOWINGS_REQUEST","LOAD_FOLLOWINGS_SUCCESS","LOAD_FOLLOWINGS_FAILURE","FOLLOW_USER_REQUEST","FOLLOW_USER_SUCCESS","FOLLOW_USER_FAILURE","UNFOLLOW_USER_REQUEST","UNFOLLOW_USER_SUCCESS","UNFOLLOW_USER_FAILURE","REMOVE_FOLLOWER_REQUEST","REMOVE_FOLLOWER_SUCCESS","REMOVE_FOLLOWER_FAILURE","EDIT_NICKNAME_REQUEST","EDIT_NICKNAME_SUCCESS","EDIT_NICKNAME_FAILURE","ADD_POST_TO_ME","REMOVE_POST_TO_ME","signUpRequestAction","data","type","state","action","draft","isLoading","error","isSignUp","isSigninUp","isSigndUp","userinfo","Followings","unshift","id","index","findIndex","v","splice","index2","Posts","offset","forEach","d","push","length","Followers","FollowerList","nickname"],"mappings":"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","sourcesContent":["import produce from \"immer\";\r\n\r\n// store, 초기값\r\nexport const initialState = {\r\n    isLoggedIn: false, // 로그인 여부\r\n    isLoggingOut: false, // 로그아웃 시도중\r\n    logInErrorReason: \"\", // 로그인 실패 사유\r\n    isSignedUp: false, // 회원가입 성공\r\n    isSigningUp: false, // 회원가입 시도중\r\n    signUpErrorReason: \"\", // 회원가입 실패 사유\r\n    me: null, // 내 정보\r\n    followingList: [], // 팔로잉 리스트\r\n    followerList: [], // 팔로워 리스트\r\n    userInfo: null, // 남의 정보\r\n    isEditingNickname: false, // 이름 변경 중\r\n    editNicknameErrorReason: \"\", // 이름 변경 실패 사유\r\n    hasMoreFollower: false,\r\n    hasMoreFollowing: false\r\n};\r\n//\r\nexport const SIGN_UP_REQUEST = \"SIGN_UP_REQUEST\";\r\nexport const SIGN_UP_SUCCESS = \"SIGN_UP_SUCCESS\";\r\nexport const SIGN_UP_FAILURE = \"SIGN_UP_FAILURE\";\r\n\r\nexport const LOG_IN_REQUEST = \"LOG_IN_REQUEST\";\r\nexport const LOG_IN_SUCCESS = \"LOG_IN_SUCCESS\";\r\nexport const LOG_IN_FAILURE = \"LOG_IN_FAILURE\";\r\n\r\nexport const LOG_USER_REQUEST = \"LOG_USER_REQUEST\";\r\nexport const LOG_USER_SUCCESS = \"LOG_USER_SUCCESS\";\r\nexport const LOG_USER_FAILURE = \"LOG_USER_FAILURE\";\r\n\r\nexport const LOG_OUT_REQUEST = \"LOG_OUT_REQUEST\";\r\nexport const LOG_OUT_SUCCESS = \"LOG_OUT_SUCCESS\";\r\nexport const LOG_OUT_FAILURE = \"LOG_OUT_FAILURE\";\r\n\r\nexport const LOAD_USER_REQUEST = \"LOAD_USER_REQUEST\";\r\nexport const LOAD_USER_SUCCESS = \"LOAD_USER_SUCCESS\";\r\nexport const LOAD_USER_FAILURE = \"LOAD_USER_FAILURE\";\r\n\r\nexport const LOAD_FOLLOWERS_REQUEST = \"LOAD_FOLLOWERS_REQUEST\";\r\nexport const LOAD_FOLLOWERS_SUCCESS = \"LOAD_FOLLOWERS_SUCCESS\";\r\nexport const LOAD_FOLLOWERS_FAILURE = \"LOAD_FOLLOWERS_FAILURE\";\r\n\r\nexport const LOAD_FOLLOWINGS_REQUEST = \"LOAD_FOLLOWINGS_REQUEST\";\r\nexport const LOAD_FOLLOWINGS_SUCCESS = \"LOAD_FOLLOWINGS_SUCCESS\";\r\nexport const LOAD_FOLLOWINGS_FAILURE = \"LOAD_FOLLOWINGS_FAILURE\";\r\n\r\nexport const FOLLOW_USER_REQUEST = \"FOLLOW_USER_REQUEST\";\r\nexport const FOLLOW_USER_SUCCESS = \"FOLLOW_USER_SUCCESS\";\r\nexport const FOLLOW_USER_FAILURE = \"FOLLOW_USER_FAILURE\";\r\n\r\nexport const UNFOLLOW_USER_REQUEST = \"UNFOLLOW_USER_REQUEST\";\r\nexport const UNFOLLOW_USER_SUCCESS = \"UNFOLLOW_USER_SUCCESS\";\r\nexport const UNFOLLOW_USER_FAILURE = \"UNFOLLOW_USER_FAILURE\";\r\n\r\nexport const REMOVE_FOLLOWER_REQUEST = \"REMOVE_FOLLOWER_REQUEST\";\r\nexport const REMOVE_FOLLOWER_SUCCESS = \"REMOVE_FOLLOWER_SUCCESS\";\r\nexport const REMOVE_FOLLOWER_FAILURE = \"REMOVE_FOLLOWER_FAILURE\";\r\n\r\nexport const EDIT_NICKNAME_REQUEST = \"EDIT_NICKNAME_REQUEST\";\r\nexport const EDIT_NICKNAME_SUCCESS = \"EDIT_NICKNAME_SUCCESS\";\r\nexport const EDIT_NICKNAME_FAILURE = \"EDIT_NICKNAME_FAILURE\";\r\n\r\nexport const ADD_POST_TO_ME = \"ADD_POST_TO_ME\";\r\nexport const REMOVE_POST_TO_ME = \"REMOVE_POST_TO_ME\";\r\n\r\n// 실제 액션\r\nexport const signUpRequestAction = data => {\r\n    return {\r\n        type: SIGN_UP_REQUEST,\r\n        data\r\n    };\r\n};\r\n\r\n// 리듀서 -> Action의 결과로 state를 어떻게 바꿀지 정의\r\nexport default (state = initialState, action) => {\r\n    return produce(state, draft => {\r\n        switch (action.type) {\r\n            case LOG_IN_REQUEST: {\r\n                draft.isLoggedIn = true;\r\n                draft.logInErrorReason = \"\";\r\n                break;\r\n                // return {\r\n                //     ...state,\r\n                //     isLoggedIn: true,\r\n                //     logInErrorReason: \"\"\r\n                // };\r\n            }\r\n            case LOG_IN_SUCCESS: {\r\n                draft.isLoggedIn = false;\r\n                draft.me = action.data;\r\n                draft.isLoading = false;\r\n                break;\r\n                // return {\r\n                //     ...state,\r\n                //     isLoggedIn: false,\r\n                //     me: action.data,\r\n                //     isLoading: false\r\n                // };\r\n            }\r\n            case LOG_IN_FAILURE: {\r\n                draft.isLoggedIn = false;\r\n                draft.logInErrorReason = action.error;\r\n                draft.me = null;\r\n                break;\r\n                // return {\r\n                //     ...state,\r\n                //     isLoggedIn: false,\r\n                //     logInErrorReason: action.error,\r\n                //     me: null\r\n                // };\r\n            }\r\n            case LOG_OUT_REQUEST: {\r\n                draft.isLoggingOut = true;\r\n                break;\r\n                // return {\r\n                //     ...state,\r\n                //     isLoggingOut: true\r\n                // };\r\n            }\r\n            case LOG_OUT_SUCCESS: {\r\n                draft.isLoggingOut = false;\r\n                draft.me = null;\r\n                break;\r\n                // return {\r\n                //     ...state,\r\n                //     isLoggingOut: false,\r\n                //     me: null\r\n                // };\r\n            }\r\n            case SIGN_UP_REQUEST: {\r\n                draft.isSigningUp = true;\r\n                draft.isSignUp = false;\r\n                draft.signUpErrorReason = \"\";\r\n                break;\r\n                // return {\r\n                //     ...state,\r\n                //     isSigningUp: true,\r\n                //     isSignedUp: false,\r\n                //     signUpErrorReason: \"\"\r\n                // };\r\n            }\r\n            case SIGN_UP_SUCCESS: {\r\n                draft.isSigninUp = false;\r\n                draft.isSigndUp = true;\r\n                break;\r\n                // return {\r\n                //     ...state,\r\n                //     isSigningUp: false,\r\n                //     isSignedUp: true\r\n                // };\r\n            }\r\n            case SIGN_UP_FAILURE: {\r\n                draft.isSigningUp = false;\r\n                draft.signUpErrorReason = action.error;\r\n                break;\r\n                // return {\r\n                //     ...state,\r\n                //     isSigningUp: false,\r\n                //     signUpErrorReason: action.error\r\n                // };\r\n            }\r\n            case LOAD_USER_REQUEST: {\r\n                break;\r\n                // return {\r\n                //     ...state\r\n                // };\r\n            }\r\n            case LOAD_USER_SUCCESS: {\r\n                if (action.me) {\r\n                    draft.me = action.data;\r\n                    break;\r\n                    // return {\r\n                    //     ...state,\r\n                    //     me: action.data\r\n                    // };\r\n                }\r\n                draft.userinfo = action.data;\r\n                break;\r\n                // return {\r\n                //     ...state,\r\n                //     userInfo: action.data\r\n                // };\r\n            }\r\n            case LOAD_USER_FAILURE: {\r\n                break;\r\n                // return {\r\n                //     ...state\r\n                // };\r\n            }\r\n            case FOLLOW_USER_REQUEST: {\r\n                break;\r\n                // return {\r\n                //     ...state\r\n                // };\r\n            }\r\n            case FOLLOW_USER_SUCCESS: {\r\n                draft.me.Followings.unshift({ id: action.data });\r\n                break;\r\n                // return {\r\n                //     ...state,\r\n                //     me: {\r\n                //         ...state.me,\r\n                //         Followings: [\r\n                //             { id: action.data },\r\n                //             ...state.me.Followings\r\n                //         ]\r\n                //     }\r\n                // };\r\n            }\r\n            case FOLLOW_USER_FAILURE: {\r\n                break;\r\n                // return {\r\n                //     ...state\r\n                // };\r\n            }\r\n            case UNFOLLOW_USER_REQUEST: {\r\n                break;\r\n                // return {\r\n                //     ...state\r\n                // };\r\n            }\r\n            case UNFOLLOW_USER_SUCCESS: {\r\n                const index = draft.me.Followings.findIndex(\r\n                    v => v.id === action.data\r\n                );\r\n                draft.me.Followings.splice(index, 1);\r\n                const index2 = draft.me.Followings.findIndex(\r\n                    v => v.id === action.data\r\n                );\r\n                draft.me.Followings.splice(index2, 1);\r\n                break;\r\n                // return {\r\n                //     ...state,\r\n                //     me: {\r\n                //         ...state.me,\r\n                //         Followings: state.me.Followings.filter(\r\n                //             v => v.id !== action.data\r\n                //         )\r\n                //     },\r\n                //     followingList: state.followingList.filter(\r\n                //         v => v.id !== action.data\r\n                //     )\r\n                // };\r\n            }\r\n            case UNFOLLOW_USER_FAILURE: {\r\n                break;\r\n                // return {\r\n                //     ...state\r\n                // };\r\n            }\r\n            case ADD_POST_TO_ME: {\r\n                draft.me.Posts.unshift({ id: action.data });\r\n                break;\r\n                // return {\r\n                //     ...state,\r\n                //     me: {\r\n                //         ...state.me,\r\n                //         Posts: [{ id: action.data }, ...state.me.Posts]\r\n                //     }\r\n                // };\r\n            }\r\n            case REMOVE_POST_TO_ME: {\r\n                draft.me.Posts.unshift({ id: action.data });\r\n                break;\r\n                // return {\r\n                //     ...state,\r\n                //     me: {\r\n                //         ...state.me,\r\n                //         Posts: state.me.Posts.filter(v => v.id !== action.data)\r\n                //     }\r\n                // };\r\n            }\r\n            case LOAD_FOLLOWERS_REQUEST: {\r\n                draft.followerList = !action.offset ? [] : draft.followerList;\r\n                draft.hasMoreFollower = action.offset\r\n                    ? state.hasMoreFollower\r\n                    : true;\r\n                break;\r\n                // return {\r\n                //     ...state,\r\n                //     // 처음 데이터를 가져올 때는 더보기 버튼을 true로\r\n                //     hasMoreFollower: action.offset\r\n                //         ? state.hasMoreFollower\r\n                //         : true\r\n                // };\r\n            }\r\n            case LOAD_FOLLOWERS_SUCCESS: {\r\n                action.data.forEach(d => {\r\n                    draft.followerList.push(d);\r\n                });\r\n                draft.hasMoreFollower = action.data.length === 3;\r\n                break;\r\n                // return {\r\n                //     ...state,\r\n                //     followerList: state.followerList.concat(action.data),\r\n                //     hasMoreFollower: action.data.length === 3\r\n                // };\r\n            }\r\n            case LOAD_FOLLOWERS_FAILURE: {\r\n                break;\r\n                // return {\r\n                //     ...state\r\n                // };\r\n            }\r\n            case LOAD_FOLLOWINGS_REQUEST: {\r\n                draft.followingList = !action.offset ? [] : draft.followingList;\r\n                draft.hasMoreFollowing = action.offset\r\n                    ? draft.hasMoreFollowing\r\n                    : true;\r\n                break;\r\n                // return {\r\n                //     ...state,\r\n                //     hasMoreFollowing: action.offset\r\n                //         ? state.hasMoreFollowing\r\n                //         : true\r\n                // };\r\n            }\r\n            case LOAD_FOLLOWINGS_SUCCESS: {\r\n                action.data.forEach(d => {\r\n                    draft.followingList.push(d);\r\n                });\r\n                draft.hasMoreFollowing = action.data.length === 3;\r\n                break;\r\n                // return {\r\n                //     ...state,\r\n                //     followingList: state.followingList.concat(action.data),\r\n                //     hasMoreFollowing: action.data.length === 3\r\n                // };\r\n            }\r\n            case LOAD_FOLLOWINGS_FAILURE: {\r\n                break;\r\n                // return {\r\n                //     ...state\r\n                // };\r\n            }\r\n            case REMOVE_FOLLOWER_REQUEST: {\r\n                break;\r\n                // return {\r\n                //     ...state\r\n                // };\r\n            }\r\n            case REMOVE_FOLLOWER_SUCCESS: {\r\n                const index = draft.me.Followers.findIndex(\r\n                    v => v.id === action.data\r\n                );\r\n                draft.me.Followers.splice(index, 1);\r\n                const index2 = draft.me.FollowerList.findIndex(\r\n                    v => v.id === action.data\r\n                );\r\n                draft.me.FollowerList.splice(index2, 1);\r\n                break;\r\n                // return {\r\n                //     ...state,\r\n                //     me: {\r\n                //         ...state.me,\r\n                //         Followers: state.me.Followers.filter(\r\n                //             v => v.id !== action.data\r\n                //         )\r\n                //     },\r\n                //     followerList: state.followerList.filter(\r\n                //         v => v.id !== action.data\r\n                //     )\r\n                // };\r\n            }\r\n            case REMOVE_FOLLOWER_FAILURE: {\r\n                break;\r\n                // return {\r\n                //     ...state\r\n                // };\r\n            }\r\n            case EDIT_NICKNAME_REQUEST: {\r\n                draft.isEditingNickname = true;\r\n                draft.editNicknameErrorReason = \"\";\r\n                break;\r\n                // return {\r\n                //     ...state,\r\n                //     isEditingNickname: true,\r\n                //     editNicknameErrorReason: \"\"\r\n                // };\r\n            }\r\n            case EDIT_NICKNAME_SUCCESS: {\r\n                draft.isEditingNickname = false;\r\n                draft.me.nickname = action.data;\r\n                break;\r\n                // return {\r\n                //     ...state,\r\n                //     isEditingNickname: false,\r\n                //     me: {\r\n                //         ...state.me,\r\n                //         nickname: action.data\r\n                //     }\r\n                // };\r\n            }\r\n            case EDIT_NICKNAME_FAILURE: {\r\n                draft.isEditingNickname = false;\r\n                draft.editNicknameErrorReason = action.error;\r\n                break;\r\n                // return {\r\n                //     ...state,\r\n                //     isEditingNickname: false,\r\n                //     editNicknameErrorReason: action.error\r\n                // };\r\n            }\r\n            default: {\r\n                break;\r\n                // return {\r\n                //     ...state\r\n                // };\r\n            }\r\n        }\r\n    });\r\n};\r\n\r\n// export default reducer;\r\n"]},"metadata":{},"sourceType":"module"}