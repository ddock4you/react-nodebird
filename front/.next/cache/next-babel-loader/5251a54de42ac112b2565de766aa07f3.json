{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState, useCallback } from \"react\";\nimport { Icon } from \"antd\";\nimport ImagesZoom from \"./ImagesZoom\";\n\nconst PostImages = ({\n  images\n}) => {\n  const {\n    0: showImagesZoom,\n    1: setShowImagesZoom\n  } = useState(false);\n  const onZoom = useCallback(() => {\n    setShowImagesZoom(true);\n  }, []);\n  const onClose = useCallback(() => {\n    setShowImagesZoom(false);\n  }, []);\n\n  if (images.length === 1) {\n    return __jsx(React.Fragment, null, __jsx(\"img\", {\n      src: `http://localhost:3065/${images[0].src}`,\n      onClick: onZoom\n    }), showImagesZoom && __jsx(ImagesZoom, {\n      images: images,\n      onClose: onClose\n    }));\n  }\n\n  if (images.length === 2) {\n    return __jsx(\"div\", null, __jsx(\"img\", {\n      src: `http://localhost:3065/${images[0].src}`,\n      width: \"50%\",\n      onClick: onZoom,\n      onClose: onClose\n    }), __jsx(\"img\", {\n      src: `http://localhost:3065/${images[1].src}`,\n      width: \"50%\",\n      onClick: onZoom,\n      onClose: onClose\n    }), showImagesZoom && __jsx(ImagesZoom, {\n      images: images,\n      onClose: onClose\n    }));\n  }\n\n  return __jsx(\"div\", null, __jsx(\"img\", {\n    src: `http://localhost:3065/${images[0].src}`,\n    width: \"50%\",\n    onClick: onZoom,\n    onClose: onClose\n  }), __jsx(\"div\", {\n    style: {\n      display: \"inline-block\",\n      width: \"50%\",\n      textAlign: \"center\",\n      verticalAlign: \"middle\"\n    },\n    onClick: onZoom\n  }, __jsx(Icon, {\n    type: \"plus\"\n  }), __jsx(\"br\", null), images.length - 1, \" \\uAC1C\\uC758 \\uC0AC\\uC9C4 \\uB354\\uBCF4\\uAE30\"), showImagesZoom && __jsx(ImagesZoom, {\n    images: images,\n    onClose: onClose\n  }));\n};\n\nexport default PostImages;","map":{"version":3,"sources":["D:/project/react-nodebird/front/components/PostImages.js"],"names":["React","useState","useCallback","Icon","ImagesZoom","PostImages","images","showImagesZoom","setShowImagesZoom","onZoom","onClose","length","src","display","width","textAlign","verticalAlign"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,WAA1B,QAA6C,OAA7C;AAEA,SAASC,IAAT,QAAqB,MAArB;AACA,OAAOC,UAAP,MAAuB,cAAvB;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAgB;AAC/B,QAAM;AAAA,OAACC,cAAD;AAAA,OAAiBC;AAAjB,MAAsCP,QAAQ,CAAC,KAAD,CAApD;AACA,QAAMQ,MAAM,GAAGP,WAAW,CAAC,MAAM;AAC7BM,IAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACH,GAFyB,EAEvB,EAFuB,CAA1B;AAIA,QAAME,OAAO,GAAGR,WAAW,CAAC,MAAM;AAC9BM,IAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACH,GAF0B,EAExB,EAFwB,CAA3B;;AAIA,MAAIF,MAAM,CAACK,MAAP,KAAkB,CAAtB,EAAyB;AACrB,WACI,4BACI;AACI,MAAA,GAAG,EAAG,yBAAwBL,MAAM,CAAC,CAAD,CAAN,CAAUM,GAAI,EADhD;AAEI,MAAA,OAAO,EAAEH;AAFb,MADJ,EAKKF,cAAc,IACX,MAAC,UAAD;AAAY,MAAA,MAAM,EAAED,MAApB;AAA4B,MAAA,OAAO,EAAEI;AAArC,MANR,CADJ;AAWH;;AACD,MAAIJ,MAAM,CAACK,MAAP,KAAkB,CAAtB,EAAyB;AACrB,WACI,mBACI;AACI,MAAA,GAAG,EAAG,yBAAwBL,MAAM,CAAC,CAAD,CAAN,CAAUM,GAAI,EADhD;AAEI,MAAA,KAAK,EAAC,KAFV;AAGI,MAAA,OAAO,EAAEH,MAHb;AAII,MAAA,OAAO,EAAEC;AAJb,MADJ,EAOI;AACI,MAAA,GAAG,EAAG,yBAAwBJ,MAAM,CAAC,CAAD,CAAN,CAAUM,GAAI,EADhD;AAEI,MAAA,KAAK,EAAC,KAFV;AAGI,MAAA,OAAO,EAAEH,MAHb;AAII,MAAA,OAAO,EAAEC;AAJb,MAPJ,EAaKH,cAAc,IACX,MAAC,UAAD;AAAY,MAAA,MAAM,EAAED,MAApB;AAA4B,MAAA,OAAO,EAAEI;AAArC,MAdR,CADJ;AAmBH;;AACD,SACI,mBACI;AACI,IAAA,GAAG,EAAG,yBAAwBJ,MAAM,CAAC,CAAD,CAAN,CAAUM,GAAI,EADhD;AAEI,IAAA,KAAK,EAAC,KAFV;AAGI,IAAA,OAAO,EAAEH,MAHb;AAII,IAAA,OAAO,EAAEC;AAJb,IADJ,EAOI;AACI,IAAA,KAAK,EAAE;AACHG,MAAAA,OAAO,EAAE,cADN;AAEHC,MAAAA,KAAK,EAAE,KAFJ;AAGHC,MAAAA,SAAS,EAAE,QAHR;AAIHC,MAAAA,aAAa,EAAE;AAJZ,KADX;AAOI,IAAA,OAAO,EAAEP;AAPb,KASI,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC;AAAX,IATJ,EAUI,iBAVJ,EAWKH,MAAM,CAACK,MAAP,GAAgB,CAXrB,kDAPJ,EAoBKJ,cAAc,IAAI,MAAC,UAAD;AAAY,IAAA,MAAM,EAAED,MAApB;AAA4B,IAAA,OAAO,EAAEI;AAArC,IApBvB,CADJ;AAwBH,CApED;;AA6EA,eAAeL,UAAf","sourcesContent":["import React, { useState, useCallback } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Icon } from \"antd\";\r\nimport ImagesZoom from \"./ImagesZoom\";\r\n\r\nconst PostImages = ({ images }) => {\r\n    const [showImagesZoom, setShowImagesZoom] = useState(false);\r\n    const onZoom = useCallback(() => {\r\n        setShowImagesZoom(true);\r\n    }, []);\r\n\r\n    const onClose = useCallback(() => {\r\n        setShowImagesZoom(false);\r\n    }, []);\r\n\r\n    if (images.length === 1) {\r\n        return (\r\n            <>\r\n                <img\r\n                    src={`http://localhost:3065/${images[0].src}`}\r\n                    onClick={onZoom}\r\n                />\r\n                {showImagesZoom && (\r\n                    <ImagesZoom images={images} onClose={onClose} />\r\n                )}\r\n            </>\r\n        );\r\n    }\r\n    if (images.length === 2) {\r\n        return (\r\n            <div>\r\n                <img\r\n                    src={`http://localhost:3065/${images[0].src}`}\r\n                    width=\"50%\"\r\n                    onClick={onZoom}\r\n                    onClose={onClose}\r\n                />\r\n                <img\r\n                    src={`http://localhost:3065/${images[1].src}`}\r\n                    width=\"50%\"\r\n                    onClick={onZoom}\r\n                    onClose={onClose}\r\n                />\r\n                {showImagesZoom && (\r\n                    <ImagesZoom images={images} onClose={onClose} />\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n    return (\r\n        <div>\r\n            <img\r\n                src={`http://localhost:3065/${images[0].src}`}\r\n                width=\"50%\"\r\n                onClick={onZoom}\r\n                onClose={onClose}\r\n            />\r\n            <div\r\n                style={{\r\n                    display: \"inline-block\",\r\n                    width: \"50%\",\r\n                    textAlign: \"center\",\r\n                    verticalAlign: \"middle\"\r\n                }}\r\n                onClick={onZoom}\r\n            >\r\n                <Icon type=\"plus\" />\r\n                <br />\r\n                {images.length - 1} 개의 사진 더보기\r\n            </div>\r\n            {showImagesZoom && <ImagesZoom images={images} onClose={onClose} />}\r\n        </div>\r\n    );\r\n};\r\nPostImages.propTypes = {\r\n    images: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            src: PropTypes.string\r\n        })\r\n    ).isRequired\r\n};\r\n\r\nexport default PostImages;\r\n"]},"metadata":{},"sourceType":"module"}