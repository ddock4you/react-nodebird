{"ast":null,"code":"import { all, fork, takeEvery, takeLatest, put, take, delay, call } from \"redux-saga/effects\";\nimport { LOG_IN_SUCCESS, LOG_IN_FAILURE, LOG_IN_REQUEST, SIGN_UP_REQUEST, SIGN_UP_SUCCESS, SIGN_UP_FAILURE, LOG_OUT_REQUEST, LOG_OUT_SUCCESS, LOG_OUT_FAILURE, LOAD_USER_REQUEST, LOAD_USER_SUCCESS, LOAD_USER_FAILURE, FOLLOW_USER_REQUEST, FOLLOW_USER_SUCCESS, FOLLOW_USER_FAILURE, UNFOLLOW_USER_REQUEST, UNFOLLOW_USER_SUCCESS, UNFOLLOW_USER_FAILURE, LOAD_FOLLOWERS_REQUEST, LOAD_FOLLOWERS_SUCCESS, LOAD_FOLLOWERS_FAILURE, LOAD_FOLLOWINGS_REQUEST, LOAD_FOLLOWINGS_SUCCESS, LOAD_FOLLOWINGS_FAILURE, REMOVE_FOLLOWER_REQUEST, REMOVE_FOLLOWER_SUCCESS, REMOVE_FOLLOWER_FAILURE, EDIT_NICKNAME_REQUEST, EDIT_NICKNAME_SUCCESS, EDIT_NICKNAME_FAILURE } from \"../reducers/user\";\nimport axios from \"axios\";\n\nfunction loginAPI(loginData) {\n  return axios.post(\"/user/login\", loginData, {\n    withCredentials: true\n  });\n}\n\nfunction* logIn(action) {\n  try {\n    const result = yield call(loginAPI, action.data);\n    yield put({\n      // put은 dispatch 동일\n      type: LOG_IN_SUCCESS,\n      data: result.data\n    });\n  } catch (e) {\n    // loginAPI 실패\n    console.error(e);\n    yield put({\n      type: LOG_IN_FAILURE\n    });\n  }\n}\n\nfunction* watchLogin() {\n  yield takeEvery(LOG_IN_REQUEST, logIn);\n}\n\nfunction signUpAPI(signUpdata) {\n  return axios.post(\"/user\", signUpdata);\n}\n\nfunction* signUp(action) {\n  try {\n    // yield fork(logger); logger는 내 기록을 로깅하는 함수\n    // yield call(signUpAPI);\n    yield call(signUpAPI, action.data);\n    yield put({\n      // put은 dispatch 동일\n      type: SIGN_UP_SUCCESS\n    });\n  } catch (e) {\n    // loginAPI 실패\n    console.error(e);\n    yield put({\n      type: SIGN_UP_FAILURE,\n      error: e\n    });\n  }\n}\n\nfunction* watchSignUp() {\n  yield takeEvery(SIGN_UP_REQUEST, signUp);\n}\n\nfunction logOutAPI() {\n  return axios.post(\"/user/logout\", {}, {\n    withCredentials: true\n  });\n}\n\nfunction* logOut() {\n  try {\n    yield call(logOutAPI);\n    yield put({\n      // put은 dispatch 동일\n      type: LOG_OUT_SUCCESS\n    });\n  } catch (e) {\n    // loginAPI 실패\n    console.error(e);\n    yield put({\n      type: LOG_OUT_FAILURE,\n      error: e\n    });\n  }\n}\n\nfunction* watchLogOut() {\n  yield takeEvery(LOG_OUT_REQUEST, logOut);\n}\n\nfunction loadUserAPI(userId) {\n  return axios.get(userId ? `/user/${userId}` : \"/user/\", {\n    withCredentials: true\n  });\n}\n\nfunction* loadUser(action) {\n  try {\n    const result = yield call(loadUserAPI, action.data); // console.log(\"loadUser action data confirm\", action.data);\n\n    yield put({\n      // put은 dispatch 동일\n      type: LOAD_USER_SUCCESS,\n      data: result.data,\n      me: !action.data // userId가 없으면 내 정보를 불러옴\n\n    });\n  } catch (e) {\n    // loginAPI 실패\n    console.log(\"load user failure error\", e);\n    yield put({\n      type: LOAD_USER_FAILURE,\n      error: e\n    });\n  }\n}\n\nfunction* watchLoadUser() {\n  yield takeEvery(LOAD_USER_REQUEST, loadUser);\n}\n\nfunction followAPI(userId) {\n  return axios.post(`/user/${userId}/follow`, {}, {\n    withCredentials: true\n  });\n}\n\nfunction* follow(action) {\n  try {\n    const result = yield call(followAPI, action.data);\n    yield put({\n      // put은 dispatch 동일\n      type: FOLLOW_USER_SUCCESS,\n      data: result.data,\n      me: !action.data // userId가 없으면 내 정보를 불러옴\n\n    });\n  } catch (e) {\n    // loginAPI 실패\n    yield put({\n      type: FOLLOW_USER_FAILURE,\n      error: e\n    });\n  }\n}\n\nfunction* watchFollow() {\n  yield takeEvery(FOLLOW_USER_REQUEST, follow);\n}\n\nfunction unfollowAPI(userId) {\n  return axios.delete(`/user/${userId}/follow`, {\n    withCredentials: true\n  });\n}\n\nfunction* unfollow(action) {\n  try {\n    const result = yield call(unfollowAPI, action.data);\n    yield put({\n      // put은 dispatch 동일\n      type: UNFOLLOW_USER_SUCCESS,\n      data: result.data,\n      me: !action.data // userId가 없으면 내 정보를 불러옴\n\n    });\n  } catch (e) {\n    // loginAPI 실패\n    yield put({\n      type: UNFOLLOW_USER_FAILURE,\n      error: e\n    });\n  }\n}\n\nfunction* watchUnfollow() {\n  yield takeEvery(UNFOLLOW_USER_REQUEST, unfollow);\n}\n\nfunction loadFollowersAPI(userId, offset = 0, limit = 3) {\n  return axios.get(`/user/${userId || 0}/followers?offset=${offset}&limit=${limit}`, {\n    withCredentials: true\n  });\n}\n\nfunction* loadFollowers(action) {\n  try {\n    const result = yield call(loadFollowersAPI, action.data, action.offset);\n    yield put({\n      type: LOAD_FOLLOWERS_SUCCESS,\n      data: result.data\n    });\n  } catch (e) {\n    // loginAPI 실패\n    yield put({\n      type: LOAD_FOLLOWERS_FAILURE,\n      error: e\n    });\n  }\n}\n\nfunction* watchLoadFollowers() {\n  yield takeEvery(LOAD_FOLLOWERS_REQUEST, loadFollowers);\n}\n\nfunction loadFollowingsAPI(userId, offset = 0, limit = 3) {\n  return axios.get(`/user/${userId || 0}/followings?offset=${offset}&limit=${limit}`, {\n    withCredentials: true\n  });\n}\n\nfunction* loadFollowings(action) {\n  try {\n    const result = yield call(loadFollowingsAPI, action.data, action.offset);\n    yield put({\n      type: LOAD_FOLLOWINGS_SUCCESS,\n      data: result.data\n    });\n  } catch (e) {\n    // loginAPI 실패\n    yield put({\n      type: LOAD_FOLLOWINGS_FAILURE,\n      error: e\n    });\n  }\n}\n\nfunction* watchLoadFollowings() {\n  yield takeEvery(LOAD_FOLLOWINGS_REQUEST, loadFollowings);\n}\n\nfunction removeFollowerAPI(userId) {\n  return axios.delete(`/user/${userId}/follower`, {\n    withCredentials: true\n  });\n}\n\nfunction* removeFollower(action) {\n  try {\n    const result = yield call(removeFollowerAPI, action.data);\n    yield put({\n      type: REMOVE_FOLLOWER_SUCCESS,\n      data: result.data\n    });\n  } catch (e) {\n    // loginAPI 실패\n    yield put({\n      type: REMOVE_FOLLOWER_FAILURE,\n      error: e.response && e.response.data\n    });\n  }\n}\n\nfunction* watchRemoveFollower() {\n  yield takeEvery(REMOVE_FOLLOWER_REQUEST, removeFollower);\n}\n\nfunction editNicknameAPI(nickname) {\n  return axios.patch(`/user/nickname`, {\n    nickname\n  }, {\n    withCredentials: true\n  });\n}\n\nfunction* editNickname(action) {\n  try {\n    const result = yield call(editNicknameAPI, action.data);\n    yield put({\n      type: EDIT_NICKNAME_SUCCESS,\n      data: result.data\n    });\n  } catch (e) {\n    console.error(e);\n    yield put({\n      type: EDIT_NICKNAME_FAILURE,\n      error: e\n    });\n  }\n}\n\nfunction* watchEditNickname() {\n  yield takeEvery(EDIT_NICKNAME_REQUEST, editNickname);\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchLogin), fork(watchSignUp), fork(watchLogOut), fork(watchLoadUser), fork(watchFollow), fork(watchUnfollow), fork(watchLoadFollowers), fork(watchLoadFollowings), fork(watchRemoveFollower), fork(watchEditNickname)]);\n}","map":{"version":3,"sources":["D:/project/react-nodebird/front/sagas/user.js"],"names":["all","fork","takeEvery","takeLatest","put","take","delay","call","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOG_IN_REQUEST","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","LOAD_USER_REQUEST","LOAD_USER_SUCCESS","LOAD_USER_FAILURE","FOLLOW_USER_REQUEST","FOLLOW_USER_SUCCESS","FOLLOW_USER_FAILURE","UNFOLLOW_USER_REQUEST","UNFOLLOW_USER_SUCCESS","UNFOLLOW_USER_FAILURE","LOAD_FOLLOWERS_REQUEST","LOAD_FOLLOWERS_SUCCESS","LOAD_FOLLOWERS_FAILURE","LOAD_FOLLOWINGS_REQUEST","LOAD_FOLLOWINGS_SUCCESS","LOAD_FOLLOWINGS_FAILURE","REMOVE_FOLLOWER_REQUEST","REMOVE_FOLLOWER_SUCCESS","REMOVE_FOLLOWER_FAILURE","EDIT_NICKNAME_REQUEST","EDIT_NICKNAME_SUCCESS","EDIT_NICKNAME_FAILURE","axios","loginAPI","loginData","post","withCredentials","logIn","action","result","data","type","e","console","error","watchLogin","signUpAPI","signUpdata","signUp","watchSignUp","logOutAPI","logOut","watchLogOut","loadUserAPI","userId","get","loadUser","me","log","watchLoadUser","followAPI","follow","watchFollow","unfollowAPI","delete","unfollow","watchUnfollow","loadFollowersAPI","offset","limit","loadFollowers","watchLoadFollowers","loadFollowingsAPI","loadFollowings","watchLoadFollowings","removeFollowerAPI","removeFollower","response","watchRemoveFollower","editNicknameAPI","nickname","patch","editNickname","watchEditNickname","userSaga"],"mappings":"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","sourcesContent":["import {\r\n    all,\r\n    fork,\r\n    takeEvery,\r\n    takeLatest,\r\n    put,\r\n    take,\r\n    delay,\r\n    call\r\n} from \"redux-saga/effects\";\r\nimport {\r\n    LOG_IN_SUCCESS,\r\n    LOG_IN_FAILURE,\r\n    LOG_IN_REQUEST,\r\n    SIGN_UP_REQUEST,\r\n    SIGN_UP_SUCCESS,\r\n    SIGN_UP_FAILURE,\r\n    LOG_OUT_REQUEST,\r\n    LOG_OUT_SUCCESS,\r\n    LOG_OUT_FAILURE,\r\n    LOAD_USER_REQUEST,\r\n    LOAD_USER_SUCCESS,\r\n    LOAD_USER_FAILURE,\r\n    FOLLOW_USER_REQUEST,\r\n    FOLLOW_USER_SUCCESS,\r\n    FOLLOW_USER_FAILURE,\r\n    UNFOLLOW_USER_REQUEST,\r\n    UNFOLLOW_USER_SUCCESS,\r\n    UNFOLLOW_USER_FAILURE,\r\n    LOAD_FOLLOWERS_REQUEST,\r\n    LOAD_FOLLOWERS_SUCCESS,\r\n    LOAD_FOLLOWERS_FAILURE,\r\n    LOAD_FOLLOWINGS_REQUEST,\r\n    LOAD_FOLLOWINGS_SUCCESS,\r\n    LOAD_FOLLOWINGS_FAILURE,\r\n    REMOVE_FOLLOWER_REQUEST,\r\n    REMOVE_FOLLOWER_SUCCESS,\r\n    REMOVE_FOLLOWER_FAILURE,\r\n    EDIT_NICKNAME_REQUEST,\r\n    EDIT_NICKNAME_SUCCESS,\r\n    EDIT_NICKNAME_FAILURE\r\n} from \"../reducers/user\";\r\nimport axios from \"axios\";\r\n\r\nfunction loginAPI(loginData) {\r\n    return axios.post(\"/user/login\", loginData, {\r\n        withCredentials: true\r\n    });\r\n}\r\n\r\nfunction* logIn(action) {\r\n    try {\r\n        const result = yield call(loginAPI, action.data);\r\n        yield put({\r\n            // put은 dispatch 동일\r\n            type: LOG_IN_SUCCESS,\r\n            data: result.data\r\n        });\r\n    } catch (e) {\r\n        // loginAPI 실패\r\n        console.error(e);\r\n        yield put({\r\n            type: LOG_IN_FAILURE\r\n        });\r\n    }\r\n}\r\n\r\nfunction* watchLogin() {\r\n    yield takeEvery(LOG_IN_REQUEST, logIn);\r\n}\r\n\r\nfunction signUpAPI(signUpdata) {\r\n    return axios.post(\"/user\", signUpdata);\r\n}\r\n\r\nfunction* signUp(action) {\r\n    try {\r\n        // yield fork(logger); logger는 내 기록을 로깅하는 함수\r\n        // yield call(signUpAPI);\r\n        yield call(signUpAPI, action.data);\r\n        yield put({\r\n            // put은 dispatch 동일\r\n            type: SIGN_UP_SUCCESS\r\n        });\r\n    } catch (e) {\r\n        // loginAPI 실패\r\n        console.error(e);\r\n        yield put({\r\n            type: SIGN_UP_FAILURE,\r\n            error: e\r\n        });\r\n    }\r\n}\r\n\r\nfunction* watchSignUp() {\r\n    yield takeEvery(SIGN_UP_REQUEST, signUp);\r\n}\r\n\r\nfunction logOutAPI() {\r\n    return axios.post(\r\n        \"/user/logout\",\r\n        {},\r\n        {\r\n            withCredentials: true\r\n        }\r\n    );\r\n}\r\n\r\nfunction* logOut() {\r\n    try {\r\n        yield call(logOutAPI);\r\n        yield put({\r\n            // put은 dispatch 동일\r\n            type: LOG_OUT_SUCCESS\r\n        });\r\n    } catch (e) {\r\n        // loginAPI 실패\r\n        console.error(e);\r\n        yield put({\r\n            type: LOG_OUT_FAILURE,\r\n            error: e\r\n        });\r\n    }\r\n}\r\n\r\nfunction* watchLogOut() {\r\n    yield takeEvery(LOG_OUT_REQUEST, logOut);\r\n}\r\n\r\nfunction loadUserAPI(userId) {\r\n    return axios.get(userId ? `/user/${userId}` : \"/user/\", {\r\n        withCredentials: true\r\n    });\r\n}\r\n\r\nfunction* loadUser(action) {\r\n    try {\r\n        const result = yield call(loadUserAPI, action.data);\r\n        // console.log(\"loadUser action data confirm\", action.data);\r\n        yield put({\r\n            // put은 dispatch 동일\r\n            type: LOAD_USER_SUCCESS,\r\n            data: result.data,\r\n            me: !action.data // userId가 없으면 내 정보를 불러옴\r\n        });\r\n    } catch (e) {\r\n        // loginAPI 실패\r\n        console.log(\"load user failure error\", e);\r\n        yield put({\r\n            type: LOAD_USER_FAILURE,\r\n            error: e\r\n        });\r\n    }\r\n}\r\n\r\nfunction* watchLoadUser() {\r\n    yield takeEvery(LOAD_USER_REQUEST, loadUser);\r\n}\r\n\r\nfunction followAPI(userId) {\r\n    return axios.post(\r\n        `/user/${userId}/follow`,\r\n        {},\r\n        {\r\n            withCredentials: true\r\n        }\r\n    );\r\n}\r\n\r\nfunction* follow(action) {\r\n    try {\r\n        const result = yield call(followAPI, action.data);\r\n        yield put({\r\n            // put은 dispatch 동일\r\n            type: FOLLOW_USER_SUCCESS,\r\n            data: result.data,\r\n            me: !action.data // userId가 없으면 내 정보를 불러옴\r\n        });\r\n    } catch (e) {\r\n        // loginAPI 실패\r\n        yield put({\r\n            type: FOLLOW_USER_FAILURE,\r\n            error: e\r\n        });\r\n    }\r\n}\r\n\r\nfunction* watchFollow() {\r\n    yield takeEvery(FOLLOW_USER_REQUEST, follow);\r\n}\r\n\r\nfunction unfollowAPI(userId) {\r\n    return axios.delete(`/user/${userId}/follow`, {\r\n        withCredentials: true\r\n    });\r\n}\r\n\r\nfunction* unfollow(action) {\r\n    try {\r\n        const result = yield call(unfollowAPI, action.data);\r\n        yield put({\r\n            // put은 dispatch 동일\r\n            type: UNFOLLOW_USER_SUCCESS,\r\n            data: result.data,\r\n            me: !action.data // userId가 없으면 내 정보를 불러옴\r\n        });\r\n    } catch (e) {\r\n        // loginAPI 실패\r\n        yield put({\r\n            type: UNFOLLOW_USER_FAILURE,\r\n            error: e\r\n        });\r\n    }\r\n}\r\n\r\nfunction* watchUnfollow() {\r\n    yield takeEvery(UNFOLLOW_USER_REQUEST, unfollow);\r\n}\r\n\r\nfunction loadFollowersAPI(userId, offset = 0, limit = 3) {\r\n    return axios.get(\r\n        `/user/${userId || 0}/followers?offset=${offset}&limit=${limit}`,\r\n        {\r\n            withCredentials: true\r\n        }\r\n    );\r\n}\r\n\r\nfunction* loadFollowers(action) {\r\n    try {\r\n        const result = yield call(loadFollowersAPI, action.data, action.offset);\r\n        yield put({\r\n            type: LOAD_FOLLOWERS_SUCCESS,\r\n            data: result.data\r\n        });\r\n    } catch (e) {\r\n        // loginAPI 실패\r\n        yield put({\r\n            type: LOAD_FOLLOWERS_FAILURE,\r\n            error: e\r\n        });\r\n    }\r\n}\r\n\r\nfunction* watchLoadFollowers() {\r\n    yield takeEvery(LOAD_FOLLOWERS_REQUEST, loadFollowers);\r\n}\r\n\r\nfunction loadFollowingsAPI(userId, offset = 0, limit = 3) {\r\n    return axios.get(\r\n        `/user/${userId || 0}/followings?offset=${offset}&limit=${limit}`,\r\n        {\r\n            withCredentials: true\r\n        }\r\n    );\r\n}\r\n\r\nfunction* loadFollowings(action) {\r\n    try {\r\n        const result = yield call(\r\n            loadFollowingsAPI,\r\n            action.data,\r\n            action.offset\r\n        );\r\n        yield put({\r\n            type: LOAD_FOLLOWINGS_SUCCESS,\r\n            data: result.data\r\n        });\r\n    } catch (e) {\r\n        // loginAPI 실패\r\n        yield put({\r\n            type: LOAD_FOLLOWINGS_FAILURE,\r\n            error: e\r\n        });\r\n    }\r\n}\r\n\r\nfunction* watchLoadFollowings() {\r\n    yield takeEvery(LOAD_FOLLOWINGS_REQUEST, loadFollowings);\r\n}\r\n\r\nfunction removeFollowerAPI(userId) {\r\n    return axios.delete(`/user/${userId}/follower`, {\r\n        withCredentials: true\r\n    });\r\n}\r\n\r\nfunction* removeFollower(action) {\r\n    try {\r\n        const result = yield call(removeFollowerAPI, action.data);\r\n        yield put({\r\n            type: REMOVE_FOLLOWER_SUCCESS,\r\n            data: result.data\r\n        });\r\n    } catch (e) {\r\n        // loginAPI 실패\r\n        yield put({\r\n            type: REMOVE_FOLLOWER_FAILURE,\r\n            error: e.response && e.response.data\r\n        });\r\n    }\r\n}\r\n\r\nfunction* watchRemoveFollower() {\r\n    yield takeEvery(REMOVE_FOLLOWER_REQUEST, removeFollower);\r\n}\r\n\r\nfunction editNicknameAPI(nickname) {\r\n    return axios.patch(\r\n        `/user/nickname`,\r\n        { nickname },\r\n        {\r\n            withCredentials: true\r\n        }\r\n    );\r\n}\r\n\r\nfunction* editNickname(action) {\r\n    try {\r\n        const result = yield call(editNicknameAPI, action.data);\r\n        yield put({\r\n            type: EDIT_NICKNAME_SUCCESS,\r\n            data: result.data\r\n        });\r\n    } catch (e) {\r\n        console.error(e);\r\n        yield put({\r\n            type: EDIT_NICKNAME_FAILURE,\r\n            error: e\r\n        });\r\n    }\r\n}\r\n\r\nfunction* watchEditNickname() {\r\n    yield takeEvery(EDIT_NICKNAME_REQUEST, editNickname);\r\n}\r\n\r\nexport default function* userSaga() {\r\n    yield all([\r\n        fork(watchLogin),\r\n        fork(watchSignUp),\r\n        fork(watchLogOut),\r\n        fork(watchLoadUser),\r\n        fork(watchFollow),\r\n        fork(watchUnfollow),\r\n        fork(watchLoadFollowers),\r\n        fork(watchLoadFollowings),\r\n        fork(watchRemoveFollower),\r\n        fork(watchEditNickname)\r\n    ]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}