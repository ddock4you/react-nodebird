{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState, useCallback, useEffect } from \"react\";\nimport { Button, Checkbox, Form, Input } from \"antd\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Router from \"next/router\";\nimport { SIGN_UP_REQUEST } from \"../reducers/user\";\nexport const useInput = (initValue = null) => {\n  const {\n    0: value,\n    1: setter\n  } = useState(initValue);\n  const handler = useCallback(e => {\n    setter(e.target.value);\n  }, []);\n  return [value, handler];\n};\n\nconst Signup = () => {\n  const {\n    0: id,\n    1: setId\n  } = useState(\"\");\n  const {\n    0: nick,\n    1: setNick\n  } = useState(\"\");\n  const {\n    0: password,\n    1: setpassword\n  } = useState(\"\");\n  const {\n    0: passwordCheck,\n    1: setPasswordCheck\n  } = useState(\"\");\n  const {\n    0: term,\n    1: setTerm\n  } = useState(\"\");\n  const {\n    0: passwordError,\n    1: setPasswordError\n  } = useState(\"\");\n  const {\n    0: termError,\n    1: setTermError\n  } = useState(\"\");\n  const {\n    isSigningUp,\n    me\n  } = useSelector(state => state.user);\n  useEffect(() => {\n    if (me) {\n      alert(\"로그인이 확인되어 메인 페이지로 이동합니다.\");\n      Router.push(\"/\");\n    }\n  }, [me && me.id]); // custom hook\n\n  const dispatch = useDispatch();\n  const onSubmit = useCallback(e => {\n    e.preventDefault();\n\n    if (password !== passwordCheck) {\n      return setPasswordError(true);\n    }\n\n    if (!term) {\n      return setTermError(true);\n    }\n\n    console.log({\n      id,\n      nick,\n      password,\n      passwordCheck,\n      term\n    });\n    dispatch({\n      type: \"SIGN_UP_REQUEST\",\n      data: {\n        userId: id,\n        nickname: nick,\n        password,\n        term\n      }\n    });\n  }, [id, nick, password, passwordCheck, term]);\n  const onChangeId = useCallback(e => {\n    setId(e.target.value);\n  }, []);\n  const onChangeNick = useCallback(e => {\n    setNick(e.target.value);\n  }, []);\n  const onChangePassword = useCallback(e => {\n    setpassword(e.target.value);\n  }, []);\n  const onChangePasswordCheck = useCallback(e => {\n    setPasswordError(e.target.value !== password);\n    setPasswordCheck(e.target.value);\n  }, [password]);\n  const onChangeTerm = useCallback(e => {\n    setTermError(false);\n    setTerm(e.target.checked);\n  }, []);\n\n  if (me) {\n    return null;\n  }\n\n  return __jsx(React.Fragment, null, __jsx(Form, {\n    onSubmit: onSubmit,\n    style: {\n      padding: 10\n    }\n  }, __jsx(\"div\", null, __jsx(\"label\", {\n    htmlFor: \"user-id\"\n  }, \"\\uC544\\uC774\\uB514\"), __jsx(\"br\", null), __jsx(Input, {\n    name: \"user-id\",\n    value: id,\n    required: true,\n    onChange: onChangeId\n  })), __jsx(\"div\", null, __jsx(\"label\", {\n    htmlFor: \"user-nick\"\n  }, \"\\uB2C9\\uB124\\uC784\"), __jsx(\"br\", null), __jsx(Input, {\n    name: \"user-nick\",\n    value: nick,\n    required: true,\n    onChange: onChangeNick\n  })), __jsx(\"div\", null, __jsx(\"label\", {\n    htmlFor: \"user-password\"\n  }, \"\\uBE44\\uBC00\\uBC88\\uD638\"), __jsx(\"br\", null), __jsx(Input, {\n    name: \"user-password\",\n    type: \"password\",\n    value: password,\n    required: true,\n    onChange: onChangePassword\n  })), __jsx(\"div\", null, __jsx(\"label\", {\n    htmlFor: \"user-password-check\"\n  }, \"\\uBE44\\uBC00\\uBC88\\uD638\\uCCB4\\uD06C\"), __jsx(\"br\", null), __jsx(Input, {\n    name: \"user-password-check\",\n    type: \"password\",\n    value: passwordCheck,\n    required: true,\n    onChange: onChangePasswordCheck\n  }), passwordError && __jsx(\"div\", {\n    style: {\n      color: \"red\"\n    }\n  }, \"\\uBE44\\uBC00\\uBC88\\uD638\\uAC00 \\uC77C\\uCE58\\uD558\\uC9C0 \\uC54A\\uC2B5\\uB2C8\\uB2E4.\")), __jsx(\"div\", null, __jsx(Checkbox, {\n    name: \"user-term\",\n    onChange: onChangeTerm\n  }, \"\\uC81C\\uB85C\\uCD08 \\uB9D0\\uC744 \\uC798 \\uB4E4\\uC744 \\uAC83\\uC744 \\uB3D9\\uC758\\uD569\\uB2C8\\uB2E4.\"), termError && __jsx(\"div\", {\n    style: {\n      color: \"red\"\n    }\n  }, \"\\uC57D\\uAD00\\uC5D0 \\uB3D9\\uC758\\uD574\\uC8FC\\uC138\\uC694.\")), __jsx(\"div\", {\n    style: {\n      marginTop: 10\n    }\n  }, __jsx(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    loading: isSigningUp\n  }, \"\\uAC00\\uC785\\uD558\\uAE30\"))));\n};\n\nexport default Signup;","map":{"version":3,"sources":["D:/project/react-nodebird/front/pages/signup.js"],"names":["React","useState","useCallback","useEffect","Button","Checkbox","Form","Input","useDispatch","useSelector","Router","SIGN_UP_REQUEST","useInput","initValue","value","setter","handler","e","target","Signup","id","setId","nick","setNick","password","setpassword","passwordCheck","setPasswordCheck","term","setTerm","passwordError","setPasswordError","termError","setTermError","isSigningUp","me","state","user","alert","push","dispatch","onSubmit","preventDefault","console","log","type","data","userId","nickname","onChangeId","onChangeNick","onChangePassword","onChangePasswordCheck","onChangeTerm","checked","padding","color","marginTop"],"mappings":"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","sourcesContent":["import React, { useState, useCallback, useEffect } from \"react\";\r\nimport { Button, Checkbox, Form, Input } from \"antd\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Router from \"next/router\";\r\nimport { SIGN_UP_REQUEST } from \"../reducers/user\";\r\n\r\nexport const useInput = (initValue = null) => {\r\n    const [value, setter] = useState(initValue);\r\n    const handler = useCallback(e => {\r\n        setter(e.target.value);\r\n    }, []);\r\n    return [value, handler];\r\n};\r\n\r\nconst Signup = () => {\r\n    const [id, setId] = useState(\"\");\r\n    const [nick, setNick] = useState(\"\");\r\n    const [password, setpassword] = useState(\"\");\r\n    const [passwordCheck, setPasswordCheck] = useState(\"\");\r\n    const [term, setTerm] = useState(\"\");\r\n    const [passwordError, setPasswordError] = useState(\"\");\r\n    const [termError, setTermError] = useState(\"\");\r\n    const { isSigningUp, me } = useSelector(state => state.user);\r\n\r\n    useEffect(() => {\r\n        if (me) {\r\n            alert(\"로그인이 확인되어 메인 페이지로 이동합니다.\");\r\n            Router.push(\"/\");\r\n        }\r\n    }, [me && me.id]);\r\n\r\n    // custom hook\r\n    const dispatch = useDispatch();\r\n    const onSubmit = useCallback(\r\n        e => {\r\n            e.preventDefault();\r\n            if (password !== passwordCheck) {\r\n                return setPasswordError(true);\r\n            }\r\n            if (!term) {\r\n                return setTermError(true);\r\n            }\r\n            console.log({\r\n                id,\r\n                nick,\r\n                password,\r\n                passwordCheck,\r\n                term\r\n            });\r\n            dispatch({\r\n                type: \"SIGN_UP_REQUEST\",\r\n                data: {\r\n                    userId: id,\r\n                    nickname: nick,\r\n                    password,\r\n                    term\r\n                }\r\n            });\r\n        },\r\n        [id, nick, password, passwordCheck, term]\r\n    );\r\n\r\n    const onChangeId = useCallback(e => {\r\n        setId(e.target.value);\r\n    }, []);\r\n\r\n    const onChangeNick = useCallback(e => {\r\n        setNick(e.target.value);\r\n    }, []);\r\n\r\n    const onChangePassword = useCallback(e => {\r\n        setpassword(e.target.value);\r\n    }, []);\r\n\r\n    const onChangePasswordCheck = useCallback(\r\n        e => {\r\n            setPasswordError(e.target.value !== password);\r\n            setPasswordCheck(e.target.value);\r\n        },\r\n        [password]\r\n    );\r\n\r\n    const onChangeTerm = useCallback(e => {\r\n        setTermError(false);\r\n        setTerm(e.target.checked);\r\n    }, []);\r\n\r\n    if (me) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Form onSubmit={onSubmit} style={{ padding: 10 }}>\r\n                <div>\r\n                    <label htmlFor=\"user-id\">아이디</label>\r\n                    <br />\r\n                    <Input\r\n                        name=\"user-id\"\r\n                        value={id}\r\n                        required\r\n                        onChange={onChangeId}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"user-nick\">닉네임</label>\r\n                    <br />\r\n                    <Input\r\n                        name=\"user-nick\"\r\n                        value={nick}\r\n                        required\r\n                        onChange={onChangeNick}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"user-password\">비밀번호</label>\r\n                    <br />\r\n                    <Input\r\n                        name=\"user-password\"\r\n                        type=\"password\"\r\n                        value={password}\r\n                        required\r\n                        onChange={onChangePassword}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"user-password-check\">비밀번호체크</label>\r\n                    <br />\r\n                    <Input\r\n                        name=\"user-password-check\"\r\n                        type=\"password\"\r\n                        value={passwordCheck}\r\n                        required\r\n                        onChange={onChangePasswordCheck}\r\n                    />\r\n                    {passwordError && (\r\n                        <div style={{ color: \"red\" }}>\r\n                            비밀번호가 일치하지 않습니다.\r\n                        </div>\r\n                    )}\r\n                </div>\r\n                <div>\r\n                    <Checkbox name=\"user-term\" onChange={onChangeTerm}>\r\n                        제로초 말을 잘 들을 것을 동의합니다.\r\n                    </Checkbox>\r\n                    {termError && (\r\n                        <div style={{ color: \"red\" }}>약관에 동의해주세요.</div>\r\n                    )}\r\n                </div>\r\n                <div style={{ marginTop: 10 }}>\r\n                    <Button\r\n                        type=\"primary\"\r\n                        htmlType=\"submit\"\r\n                        loading={isSigningUp}\r\n                    >\r\n                        가입하기\r\n                    </Button>\r\n                </div>\r\n            </Form>\r\n        </>\r\n    );\r\n};\r\n\r\n\r\n\r\nexport default Signup;\r\n"]},"metadata":{},"sourceType":"module"}