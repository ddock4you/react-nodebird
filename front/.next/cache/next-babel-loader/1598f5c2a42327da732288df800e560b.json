{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useCallback } from \"react\";\nimport { Card, Avatar, Button } from \"antd\";\nimport Link from \"next/link\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { LOG_OUT_REQUEST } from \"../reducers/user\";\n\nconst UserProfile = () => {\n  const {\n    me\n  } = useSelector(state => state.user);\n  const dispatch = useDispatch();\n  const onLogout = useCallback(() => {\n    //useCallback을 쓰는 이유는 자식 컴포넌트에 props를 전달하기 때문에\n    dispatch({\n      type: LOG_OUT_REQUEST\n    });\n  }, []);\n  return __jsx(Card, {\n    actions: [__jsx(Link, {\n      href: \"/profile\",\n      key: \"twit\"\n    }, __jsx(\"a\", null, __jsx(\"div\", null, \"\\uC9F9\\uC9F9\", __jsx(\"br\", null), me.Posts.length))), __jsx(Link, {\n      href: \"/profile\",\n      key: \"following\"\n    }, __jsx(\"a\", null, __jsx(\"div\", null, \"\\uD314\\uB85C\\uC789\", __jsx(\"br\", null), me.Followings.length))), __jsx(Link, {\n      href: \"/profile\",\n      key: \"follower\"\n    }, __jsx(\"a\", null, __jsx(\"div\", null, \"\\uD314\\uB85C\\uC6B0\", __jsx(\"br\", null), me.Followers.length)))]\n  }, __jsx(Card.Meta, {\n    avatar: __jsx(Avatar, null, me.nickname[0]),\n    title: me.nickname\n  }), \" \", __jsx(Button, {\n    onClick: onLogout\n  }, \"\\uB85C\\uADF8\\uC544\\uC6C3\"));\n};\n\nexport default UserProfile;","map":{"version":3,"sources":["D:/project/react-nodebird/front/containers/UserProfile.js"],"names":["React","useCallback","Card","Avatar","Button","Link","useDispatch","useSelector","LOG_OUT_REQUEST","UserProfile","me","state","user","dispatch","onLogout","type","Posts","length","Followings","Followers","nickname"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,WAAhB,QAAmC,OAAnC;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,MAAvB,QAAqC,MAArC;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,eAAT,QAAgC,kBAAhC;;AAEA,MAAMC,WAAW,GAAG,MAAM;AACtB,QAAM;AAAEC,IAAAA;AAAF,MAASH,WAAW,CAACI,KAAK,IAAIA,KAAK,CAACC,IAAhB,CAA1B;AACA,QAAMC,QAAQ,GAAGP,WAAW,EAA5B;AAEA,QAAMQ,QAAQ,GAAGb,WAAW,CAAC,MAAM;AAC/B;AACAY,IAAAA,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAAEP;AADD,KAAD,CAAR;AAGH,GAL2B,EAKzB,EALyB,CAA5B;AAOA,SACI,MAAC,IAAD;AACI,IAAA,OAAO,EAAE,CACL,MAAC,IAAD;AAAM,MAAA,IAAI,EAAC,UAAX;AAAsB,MAAA,GAAG,EAAC;AAA1B,OACI,iBACI,mCAEI,iBAFJ,EAGKE,EAAE,CAACM,KAAH,CAASC,MAHd,CADJ,CADJ,CADK,EAUL,MAAC,IAAD;AAAM,MAAA,IAAI,EAAC,UAAX;AAAsB,MAAA,GAAG,EAAC;AAA1B,OACI,iBACI,yCAEI,iBAFJ,EAGKP,EAAE,CAACQ,UAAH,CAAcD,MAHnB,CADJ,CADJ,CAVK,EAmBL,MAAC,IAAD;AAAM,MAAA,IAAI,EAAC,UAAX;AAAsB,MAAA,GAAG,EAAC;AAA1B,OACI,iBACI,yCAEI,iBAFJ,EAGKP,EAAE,CAACS,SAAH,CAAaF,MAHlB,CADJ,CADJ,CAnBK;AADb,KA+BI,MAAC,IAAD,CAAM,IAAN;AACI,IAAA,MAAM,EAAE,MAAC,MAAD,QAASP,EAAE,CAACU,QAAH,CAAY,CAAZ,CAAT,CADZ;AAEI,IAAA,KAAK,EAAEV,EAAE,CAACU;AAFd,IA/BJ,EAkCO,GAlCP,EAmCI,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAEN;AAAjB,gCAnCJ,CADJ;AAuCH,CAlDD;;AAoDA,eAAeL,WAAf","sourcesContent":["import React, { useCallback } from \"react\";\r\nimport { Card, Avatar, Button } from \"antd\";\r\nimport Link from \"next/link\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { LOG_OUT_REQUEST } from \"../reducers/user\";\r\n\r\nconst UserProfile = () => {\r\n    const { me } = useSelector(state => state.user);\r\n    const dispatch = useDispatch();\r\n\r\n    const onLogout = useCallback(() => {\r\n        //useCallback을 쓰는 이유는 자식 컴포넌트에 props를 전달하기 때문에\r\n        dispatch({\r\n            type: LOG_OUT_REQUEST\r\n        });\r\n    }, []);\r\n\r\n    return (\r\n        <Card\r\n            actions={[\r\n                <Link href=\"/profile\" key=\"twit\">\r\n                    <a>\r\n                        <div>\r\n                            짹짹\r\n                            <br />\r\n                            {me.Posts.length}\r\n                        </div>\r\n                    </a>\r\n                </Link>,\r\n                <Link href=\"/profile\" key=\"following\">\r\n                    <a>\r\n                        <div>\r\n                            팔로잉\r\n                            <br />\r\n                            {me.Followings.length}\r\n                        </div>\r\n                    </a>\r\n                </Link>,\r\n                <Link href=\"/profile\" key=\"follower\">\r\n                    <a>\r\n                        <div>\r\n                            팔로우\r\n                            <br />\r\n                            {me.Followers.length}\r\n                        </div>\r\n                    </a>\r\n                </Link>\r\n            ]}\r\n        >\r\n            <Card.Meta\r\n                avatar={<Avatar>{me.nickname[0]}</Avatar>}\r\n                title={me.nickname}\r\n            />{\" \"}\r\n            <Button onClick={onLogout}>로그아웃</Button>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default UserProfile;\r\n"]},"metadata":{},"sourceType":"module"}