{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useCallback } from \"react\";\nimport { Card, Avatar, Button } from \"antd\";\nimport Link from \"next/link\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { LOG_OUT_REQUEST } from \"../reducers/user\";\n\nconst UserProfile = () => {\n  const {\n    me\n  } = useSelector(state => state.user);\n  const dispatch = useDispatch();\n  const onLogout = useCallback(() => {\n    //useCallback을 쓰는 이유는 자식 컴포넌트에 props를 전달하기 때문에\n    dispatch({\n      type: LOG_OUT_REQUEST\n    });\n  }, []);\n  return __jsx(Card, {\n    actions: [__jsx(Link, {\n      href: \"/profile\",\n      key: \"twit\"\n    }, __jsx(\"a\", null, __jsx(\"div\", null, \"\\uC9F9\\uC9F9\", __jsx(\"br\", null), me.Posts.length))), __jsx(Link, {\n      href: \"/profile\",\n      key: \"following\"\n    }, __jsx(\"a\", null, __jsx(\"div\", null, \"\\uD314\\uB85C\\uC789\", __jsx(\"br\", null), me.Followings.length))), __jsx(Link, {\n      href: \"/profile\",\n      key: \"follower\"\n    }, __jsx(\"a\", null, __jsx(\"div\", null, \"\\uD314\\uB85C\\uC6B0\", __jsx(\"br\", null), me.Followers.length)))]\n  }, __jsx(Card.Meta, {\n    avatar: __jsx(Avatar, null, me.nickname[0]),\n    title: me.nickname\n  }), \" \", __jsx(Button, {\n    onClick: onLogout\n  }, \"\\uB85C\\uADF8\\uC544\\uC6C3\"));\n};\n\nexport default UserProfile;","map":null,"metadata":{},"sourceType":"module"}